"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1017],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>k});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),p=u(t),m=o,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return t?a.createElement(k,l(l({ref:n},c),{},{components:t})):a.createElement(k,l({ref:n},c))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,l=new Array(i);l[0]=m;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r[p]="string"==typeof e?e:o,l[1]=r;for(var u=2;u<i;u++)l[u]=t[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4624:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>u});var a=t(7462),o=(t(7294),t(3905));const i={sidebar_position:1,tags:["Linux","Tips","Tricks"]},l="Tips and Tricks",r={unversionedId:"linux/Tips and Tricks",id:"linux/Tips and Tricks",title:"Tips and Tricks",description:"Linux Cheat Sheet is a collection of useful commands and shortcuts for Linux.",source:"@site/docs/linux/Tips and Tricks.md",sourceDirName:"linux",slug:"/linux/Tips and Tricks",permalink:"/Tutorials/linux/Tips and Tricks",draft:!1,tags:[{label:"Linux",permalink:"/Tutorials/tags/linux"},{label:"Tips",permalink:"/Tutorials/tags/tips"},{label:"Tricks",permalink:"/Tutorials/tags/tricks"}],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,tags:["Linux","Tips","Tricks"]},sidebar:"tutorialSidebar",previous:{title:"Linux",permalink:"/Tutorials/linux/"},next:{title:"Performance",permalink:"/Tutorials/linux/performance"}},s={},u=[{value:"Automatic Shutdown",id:"automatic-shutdown",level:2},{value:"Bash case-insensitive auto completion",id:"bash-case-insensitive-auto-completion",level:2},{value:"Changing monitor or screen Brightness and Gamma",id:"changing-monitor-or-screen-brightness-and-gamma",level:2},{value:"Resetting sound, audio",id:"resetting-sound-audio",level:2},{value:"Fixing broken grub",id:"fixing-broken-grub",level:2},{value:"EZ method",id:"ez-method",level:3},{value:"Second method",id:"second-method",level:3},{value:"Check boot errors, logs",id:"check-boot-errors-logs",level:3},{value:"Proxy",id:"proxy",level:2},{value:"Using proxies",id:"using-proxies",level:3},{value:"proxychains config",id:"proxychains-config",level:3},{value:"Resetting KDE",id:"resetting-kde",level:2},{value:"Bash scripts",id:"bash-scripts",level:2},{value:"Mouse location",id:"mouse-location",level:3},{value:"Get screen resolution",id:"get-screen-resolution",level:3},{value:"Click, move and scroll on the screen",id:"click-move-and-scroll-on-the-screen",level:3},{value:"Instant cloud file share",id:"instant-cloud-file-share",level:2},{value:"Font",id:"font",level:2},{value:"Locations",id:"locations",level:3},{value:"List",id:"list",level:3},{value:"Fira Code",id:"fira-code",level:3},{value:"Cache",id:"cache",level:3},{value:"Install Genymotoin Android emulator",id:"install-genymotoin-android-emulator",level:2},{value:"Windows 11",id:"windows-11",level:2},{value:"Make boatable usb",id:"make-boatable-usb",level:3},{value:"WoeUsb",id:"woeusb",level:3},{value:"Win2USB",id:"win2usb",level:3},{value:"Things to do after installing Windows 11",id:"things-to-do-after-installing-windows-11",level:3},{value:"Youtube-dl",id:"youtube-dl",level:2},{value:"Add Alias",id:"add-alias",level:3}],c={toc:u},p="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"tips-and-tricks"},"Tips and Tricks"),(0,o.kt)("p",null,"Linux Cheat Sheet is a collection of useful commands and shortcuts for Linux.",(0,o.kt)("br",{parentName:"p"}),"\n","And a comprehensive guide to various aspects of Linux operating system"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#automatic-shutdown"},"Automatic Shutdown")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#bash-case-insensitive-auto-completion"},"Bash case-insensitive auto completion")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#changing-monitor-or-screen-brightness-and-gamma"},"Changing monitor or screen Brightness and Gamma")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#resetting-sound-audio"},"Resetting sound, audio")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#fixing-broken-grub"},"Fixing broken grub"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#ez-method"},"EZ method")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#second-method"},"Second method")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#check-boot-errors-logs"},"Check boot errors, logs")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#proxy"},"Proxy"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#using-proxies"},"Using proxies")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#proxychains-config"},"proxychains config")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#resetting-kde"},"Resetting KDE")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#bash-scripts"},"Bash scripts"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#mouse-location"},"Mouse location")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#get-screen-resolution"},"Get screen resolution")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#click-move-and-scroll-on-the-screen"},"Click, move and scroll on the screen")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#instant-cloud-file-share"},"Instant cloud file share")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#font"},"Font"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#locations"},"Locations")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#list"},"List")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#fira-code"},"Fira Code")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#cache"},"Cache")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#install-genymotoin-android-emulator"},"Install Genymotoin Android emulator")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#windows-11"},"Windows 11"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#make-boatable-usb"},"Make boatable usb")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#woeusb"},"WoeUsb")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#win2usb"},"Win2USB")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#things-to-do-after-installing-windows-11"},"Things to do after installing Windows 11")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#youtube-dl"},"Youtube-dl"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#add-alias"},"Add Alias"))))),(0,o.kt)("h2",{id:"automatic-shutdown"},"Automatic Shutdown"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Schedule a shutdown for 220 minutes (3 hours and 30 minutes) in the future\nsudo shutdown -P +220\n\n# Shutdown the system immediately\nsudo shutdown -h now\n")),(0,o.kt)("h2",{id:"bash-case-insensitive-auto-completion"},"Bash case-insensitive auto completion"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Add the following line to the /etc/inputrc file to enable case-insensitive auto completion\necho 'set completion-ignore-case On' | sudo tee -a /etc/inputrc\n\n# or as root\necho 'set completion-ignore-case On' >> /etc/inputrc \n\n# or for current user only\necho \"set completion-ignore-case on\" >> ~/.inputrc\n")),(0,o.kt)("h2",{id:"changing-monitor-or-screen-brightness-and-gamma"},"Changing monitor or screen Brightness and Gamma"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# List available outputs\nxrandr\n\n# Change the brightness and gamma of the HDMI-A-0 output\nxrandr --output HDMI-A-0 --brightness 0.70 --gamma 0.70:0.70:0.70 \n")),(0,o.kt)("h2",{id:"resetting-sound-audio"},"Resetting sound, audio"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pulseaudio --kill\npulseaudio --start\n")),(0,o.kt)("h2",{id:"fixing-broken-grub"},"Fixing broken grub"),(0,o.kt)("h3",{id:"ez-method"},"EZ method"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Boot a live Manjaro image")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo manjaro-chroot -a\ngrub-install\nupdate-grub\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"It will detect your current installed linux.  Restart the computer and it will boot the installed linux.",(0,o.kt)("br",{parentName:"p"}),"\n","Then run:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"update-grub\n")),(0,o.kt)("h3",{id:"second-method"},"Second method"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Mount the file system and efi partition\nsudo mount /dev/nvme0n1p4 /mnt\nsudo mount --bind /dev /mnt/dev\nsudo mount --bind /dev/pts /mnt/dev/pts\nsudo mount --bind /proc /mnt/proc\nsudo mount --bind /sys /mnt/sys\nsudo mkdir /efi\nsudo mount /dev/nvme0n1p1 /efi\n\n# Install grub and update grub configuration\nsudo grub-install --root-directory=/mnt/ /dev/nvme0 --efi-directory=/efi --target=x86_64-efi --recheck\nsudo chroot /mnt\nsudo blkid -s UUID -o value /dev/nvme0n1p1\nnano /etc/fstab\nsudo update-grub\n")),(0,o.kt)("h3",{id:"check-boot-errors-logs"},"Check boot errors, logs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo dmesg --level=emerg,alert,crit,err\n# Open KsystemLog\n")),(0,o.kt)("h2",{id:"proxy"},"Proxy"),(0,o.kt)("h3",{id:"using-proxies"},"Using proxies"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# Use proxychains to run yay, git, npm and pacman\nproxychains yay --noprovides --answerdiff None --answerclean None --mflags "--noconfirm"  -S protonvpn\nproxychains git clone https://github.com/boypt/vmess2json.git\nsudo proxychains npm -g install v2ray-tools\nsudo proxychains pacman -Syyuu\n\n# Set the http and https proxy environment variables\nexport http_proxy=socks5://127.0.0.1:1080\nexport https_proxy=socks5://127.0.0.1:1080\n')),(0,o.kt)("h3",{id:"proxychains-config"},"proxychains config"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/proxychains.conf \nsocks5  127.0.0.1 1080\n# comment proxy_dns\n# proxy_dns\n")),(0,o.kt)("h2",{id:"resetting-kde"},"Resetting KDE"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"qdbus org.kde.KWin /Compositor suspend;\nrm ~/.cache/ksycoca5*;\nkquitapp5 plasmashell;\nkillall plasmashell;\nkstart5 plasmashell;\n")),(0,o.kt)("h2",{id:"bash-scripts"},"Bash scripts"),(0,o.kt)("h3",{id:"mouse-location"},"Mouse location"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"while true; do\n\n    sleep 2\n    xdotool getmouselocation\n\ndone\n")),(0,o.kt)("h3",{id:"get-screen-resolution"},"Get screen resolution"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"  RES=$(xdpyinfo | grep dimensions | awk '{print $2}')\n  WIDTH=$(echo $RES | awk -Fx '{print $1}')\n  HEIGHT=$(echo $RES | awk -Fx '{print $2}')\n")),(0,o.kt)("h3",{id:"click-move-and-scroll-on-the-screen"},"Click, move and scroll on the screen"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\n# Usage: ./click2.bash 3 30\n\n# Check for two arguments\nif [[ $# -ne 2 ]]; then\n echo "Usage: $0 <seconds> <sleep>"\n exit 1\nfi\n\nmousemoveAndClick() {\n # Move the mouse to the specified coordinates\n xdotool mousemove $1 $2\n # mouse click\n xdotool click 1\n # Sleep for 1 second\n sleep 2\n}\n\nscroll() {\n local direction=$1\n local count=$2\n if [[ $direction == "up" ]]; then\n  for i in $(seq 1 $count); do\n   xdotool click 4\n   sleep 1\n  done    \n elif [[ $direction == "down" ]]; then\n  for i in $(seq 1 $count); do   \n   xdotool click 5 \n   sleep 1\n  done\n fi\n}\n\npress_esc_and_click() {\n # Press ESC\n xdotool key Escape\n\n # Sleep for 1 second\n sleep 1\n\n # mouse click\n xdotool click 1\n}\n\n# Get the idle time in milliseconds\nIDLE_TIME=$(echo "$1 * 1000" | bc)\n\nwhile true; do\n # Get the current idle time of the mouse pointer in milliseconds\n IDLE=$(xprintidle)\n\n # Check if the mouse has been idle for at least the specified time\n if [[ $IDLE -ge $IDLE_TIME ]]; then\n  # Get screen resolution\n  # RES=$(xdpyinfo | grep dimensions | awk \'{print $2}\')\n  # WIDTH=$(echo $RES | awk -Fx \'{print $1}\')\n  # HEIGHT=$(echo $RES | awk -Fx \'{print $2}\')\n\n  mousemoveAndClick 2512 1237\n  press_esc_and_click\n\n  mousemoveAndClick 1173 647\n  mousemoveAndClick 1556 1230\n\n  mousemoveAndClick 37 312\n  mousemoveAndClick 1276 1068\n  press_esc_and_click\n\n  \n  mousemoveAndClick 30 217\n  scroll "down" 30\n  mousemoveAndClick 1247 1195\n  press_esc_and_click\n\n fi\n\n # Sleep for specified time\n sleep $2\ndone\n')),(0,o.kt)("p",null,"And run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x click.sh\n./click.sh 10 0.5\n")),(0,o.kt)("h2",{id:"instant-cloud-file-share"},"Instant cloud file share"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# -F autodestroy=1 autodestroy on download or expire in 5\ncurl https://oshi.at -F f=@/home/true/backup.tar.gz -F expire=5 minutes\ncurl -F "file=@/home/mlibre/Downloads/backup.tar.gz" "https://file.io/?expires=1w"\n')),(0,o.kt)("h2",{id:"font"},"Font"),(0,o.kt)("h3",{id:"locations"},"Locations"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"~/.local/share/fonts/")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"/usr/local/share/fonts/")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"/usr/share/fonts/"))),(0,o.kt)("h3",{id:"list"},"List"),(0,o.kt)("p",null,"List installed fonts"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"fc-match -a\nfc-list : file\n")),(0,o.kt)("h3",{id:"fira-code"},"Fira Code"),(0,o.kt)("p",null,"A popular code font."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S ttf-fira-code\nfc-match -a | grep -i fira\n")),(0,o.kt)("h3",{id:"cache"},"Cache"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo rm -v /var/cache/fontconfig/*\nfc-cache -r\n")),(0,o.kt)("h2",{id:"install-genymotoin-android-emulator"},"Install Genymotoin Android emulator"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pamac install genymotion\n")),(0,o.kt)("h2",{id:"windows-11"},"Windows 11"),(0,o.kt)("h3",{id:"make-boatable-usb"},"Make boatable usb"),(0,o.kt)("h3",{id:"woeusb"},"WoeUsb"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -Suy p7zip python-pip python-wxpython\ngit clone https://github.com/WoeUSB/WoeUSB-ng.git\nsudo pip3 install .\nsudo woeusb --workaround-skip-grub --target-filesystem NTFS --device ~/Win11_22H2_English_x64v1.iso  /dev/sdb\n")),(0,o.kt)("h3",{id:"win2usb"},"Win2USB"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"https://github.com/ValdikSS/windows2usb\nchmod +x windows2usb*\n./windows2usb-0.2.4-x86_64.AppImage /dev/sdb ~/Win11_22H2_English_x64v1.iso gpt+uefintfs\n")),(0,o.kt)("h3",{id:"things-to-do-after-installing-windows-11"},"Things to do after installing Windows 11"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Download and install all the updates"),(0,o.kt)("li",{parentName:"ul"},"Enable Ransomware protection"),(0,o.kt)("li",{parentName:"ul"},"Download DimScreen, Copy it to the download folder. Open. click on the settings. set brightness to 20%. Make a shortcut to the desktop"),(0,o.kt)("li",{parentName:"ul"},"search for gamma calibration in windows settings. set it to minimum"),(0,o.kt)("li",{parentName:"ul"},"Adjust date and time: auto. Timezone tehran +3:30"),(0,o.kt)("li",{parentName:"ul"},"Downloading updates active hours: 24 hours format. 1->11"),(0,o.kt)("li",{parentName:"ul"},"Disable all data usages settings in privacy and security"),(0,o.kt)("li",{parentName:"ul"},"uninstall mail, teams, one drive. xbox, facebook, microsoft todo, sticky notes, tips, weather"),(0,o.kt)("li",{parentName:"ul"},"Install firefox and login"),(0,o.kt)("li",{parentName:"ul"},"Install protonVPN"),(0,o.kt)("li",{parentName:"ul"},"personalize: sunrise"),(0,o.kt)("li",{parentName:"ul"},"network connection: metered connection"),(0,o.kt)("li",{parentName:"ul"},"Display: 3840x2160, 200%"),(0,o.kt)("li",{parentName:"ul"},"Steam: add your games' location to the Games' folder library. make it as default"),(0,o.kt)("li",{parentName:"ul"},"Steam: If your games are in a ",(0,o.kt)("inlineCode",{parentName:"li"},"NTFS")," file system, follow ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/ValveSoftware/Proton/wiki/Using-a-NTFS-disk-with-Linux-and-Windows"},"this")," to make game compatible with Linux."),(0,o.kt)("li",{parentName:"ul"},"Pause windows updates for 5 weeks"),(0,o.kt)("li",{parentName:"ul"},"Check windows startups apps"),(0,o.kt)("li",{parentName:"ul"},"App store: disable automatic update"),(0,o.kt)("li",{parentName:"ul"},'Leave from "AMD user experience program". AMD settings -> last tab -> last option'),(0,o.kt)("li",{parentName:"ul"},"windows features: WSL, virtual machine, hyper-v (for android and linux apps)"),(0,o.kt)("li",{parentName:"ul"},"wsl --update"),(0,o.kt)("li",{parentName:"ul"},"wsl --install -d Ubuntu"),(0,o.kt)("li",{parentName:"ul"},"Disable Error Reporting: WIN+R -> services.msc -> Windows Error Reporting Service -> Properties -> disable")),(0,o.kt)("h2",{id:"youtube-dl"},"Youtube-dl"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# Install\nsudo pacman -S youtube-dl yt-dlp\n\n# Download best quality\nyt-dlp "https://www.youtube.com/link"\n\nyt-dlp -f b --write-description  --write-auto-sub --write-subs --embed-subs --write-info-json --max-filesize 100M --download-sections "*6:02-13:40" --proxy socks5://127.0.0.1:1080/ --verbose "https://www.youtube.com/link"\n\n# List formats and sizes\nyt-dlp -F "https://www.youtube.com/link"\nyt-dlp -f 22 "https://www.youtube.com/link" \n\nyoutube-dl -f best "https://www.youtube.com/link"\n')),(0,o.kt)("h3",{id:"add-alias"},"Add Alias"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano ~/.bashrc\nalias yd='yt-dlp -f b --write-auto-sub --write-subs --embed-subs --write-info-json --max-filesize 100M'\nyd \"link\"\n")))}d.isMDXComponent=!0}}]);