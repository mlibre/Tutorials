"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3528],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>N});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),s=p(n),k=r,N=s["".concat(d,".").concat(k)]||s[k]||c[k]||i;return n?a.createElement(N,l(l({ref:t},m),{},{components:n})):a.createElement(N,l({ref:t},m))}));function N(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=k;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[s]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},2939:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:5,tags:["Linux","shell","bash","zsh","script"]},l="Shell and Scripting",o={unversionedId:"linux/shell-scripting",id:"linux/shell-scripting",title:"Shell and Scripting",description:"Login shell vs non-login-shell",source:"@site/docs/linux/shell-scripting.md",sourceDirName:"linux",slug:"/linux/shell-scripting",permalink:"/Wisdom-Hub/linux/shell-scripting",draft:!1,tags:[{label:"Linux",permalink:"/Wisdom-Hub/tags/linux"},{label:"shell",permalink:"/Wisdom-Hub/tags/shell"},{label:"bash",permalink:"/Wisdom-Hub/tags/bash"},{label:"zsh",permalink:"/Wisdom-Hub/tags/zsh"},{label:"script",permalink:"/Wisdom-Hub/tags/script"}],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,tags:["Linux","shell","bash","zsh","script"]},sidebar:"tutorialSidebar",previous:{title:"Log",permalink:"/Wisdom-Hub/linux/log-monitoring"},next:{title:"Text",permalink:"/Wisdom-Hub/linux/text"}},d={},p=[{value:"Login shell vs non-login-shell",id:"login-shell-vs-non-login-shell",level:2},{value:"Default Shell",id:"default-shell",level:2},{value:"Bash",id:"bash",level:2},{value:"Basics",id:"basics",level:3},{value:"Meta Character and Quoting",id:"meta-character-and-quoting",level:2},{value:"Execution methods",id:"execution-methods",level:3},{value:"Conditionals",id:"conditionals",level:3},{value:"wait, ;, &amp;&amp;, ||, `, $#, $?, $()",id:"wait-------",level:3},{value:"echo, env, export, set, unset, variables",id:"echo-env-export-set-unset-variables",level:3},{value:"source, alias, type",id:"source-alias-type",level:3},{value:"history",id:"history",level:3},{value:"Prompt Shell",id:"prompt-shell",level:3},{value:"Case-insensitive Auto completion",id:"case-insensitive-auto-completion",level:3},{value:"Simple Bash Scripts",id:"simple-bash-scripts",level:3},{value:"Mouse location",id:"mouse-location",level:4},{value:"Get screen resolution",id:"get-screen-resolution",level:4},{value:"Click, Move and scroll on the screen",id:"click-move-and-scroll-on-the-screen",level:4},{value:"zsh",id:"zsh",level:2},{value:"Font",id:"font",level:2}],m={toc:p},s="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"shell-and-scripting"},"Shell and Scripting"),(0,r.kt)("h2",{id:"login-shell-vs-non-login-shell"},"Login shell vs non-login-shell"),(0,r.kt)("p",null,"A shell session can be either a ",(0,r.kt)("inlineCode",{parentName:"p"},"login shell")," or a ",(0,r.kt)("inlineCode",{parentName:"p"},"non-login shell"),"."),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"login shell")," is the ",(0,r.kt)("strong",{parentName:"p"},"first shell")," that runs under ",(0,r.kt)("strong",{parentName:"p"},"your user ID")," when you start an interactive session, such as logging in via ",(0,r.kt)("inlineCode",{parentName:"p"},"tmux"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"SSH"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"su -"),". This shell reads and executes the environment configuration files ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/profile")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.bash_profile")," for ",(0,r.kt)("inlineCode",{parentName:"p"},"bash"),". You can verify if a shell is a login shell by running ",(0,r.kt)("inlineCode",{parentName:"p"},"shopt login_shell"),"."),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"non-login shell")," is any shell started in an ",(0,r.kt)("strong",{parentName:"p"},"existing session"),", like a terminal in a graphical environment, a shell ",(0,r.kt)("strong",{parentName:"p"},"inside tmux"),", or a shell within another shell. These shells ",(0,r.kt)("strong",{parentName:"p"},"do not read")," the environment configuration files (",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/profile")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.bash_profile"),"), but they do read the shell configuration file (",(0,r.kt)("inlineCode",{parentName:"p"},"~/.bashrc"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/bash.bashrc"),")."),(0,r.kt)("h2",{id:"default-shell"},"Default Shell"),(0,r.kt)("p",null,"The default login shell for a user is configured in ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/passwd"),". To check or change a user's default shell:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"getent passwd mlibre\npritenv SHELL\n")),(0,r.kt)("h2",{id:"bash"},"Bash"),(0,r.kt)("h3",{id:"basics"},"Basics"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Variables"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'my_var="Hello, World!"\necho $my_var\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"if"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"if [[ condition ]]; then\n  # Code to execute if condition is true\nfi\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"loops"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'for i in {1..5}; do\n  echo "Iteration $i"\ndone\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Functions"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'my_function() {\n  echo "Hello from my function!"\n}\nmy_function\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Command Line Arguments"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'echo "First argument: $1"\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Input and Output"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'read -p "Enter your name: " name\necho "Hello, $name!"\n')),(0,r.kt)("h2",{id:"meta-character-and-quoting"},"Meta Character and Quoting"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Command"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Short Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"*")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Matches zero or more characters. ",(0,r.kt)("inlineCode",{parentName:"td"},"ls /bin/zip*"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"?")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Matches single character. ",(0,r.kt)("inlineCode",{parentName:"td"},"ls file?.txt"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"[]")," (square brackets)"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Matches any one character within the range. ",(0,r.kt)("inlineCode",{parentName:"td"},"ls file[1-2].txt"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"{}")," (curly braces)"),(0,r.kt)("td",{parentName:"tr",align:"center"},"expands values. ",(0,r.kt)("inlineCode",{parentName:"td"},"{a,b}.txt")," expands to a.txt and b.txt")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"'single quotes'")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Escape all metacharacters within string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'"double quotes"')),(0,r.kt)("td",{parentName:"tr",align:"center"},"Interpret metacharacters within string")))),(0,r.kt)("h3",{id:"execution-methods"},"Execution methods"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Command"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Execution Method"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"./script")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Execute script in current directory as a new process"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Shebang (",(0,r.kt)("inlineCode",{parentName:"td"},"#!/"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"sh ./script")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Run script with the default system shell (/bin/sh)"),(0,r.kt)("td",{parentName:"tr",align:"center"},"No Shebang (",(0,r.kt)("inlineCode",{parentName:"td"},"#!/"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"bash ./script")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Run script explicitly with the Bash shell"),(0,r.kt)("td",{parentName:"tr",align:"center"},"No Shebang (",(0,r.kt)("inlineCode",{parentName:"td"},"#!/"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"source ./script")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Execute script in the current shell, preserving changes"),(0,r.kt)("td",{parentName:"tr",align:"center"},"No Shebang (",(0,r.kt)("inlineCode",{parentName:"td"},"#!/"),")")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"exec ./script")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Replace the current shell with the script (keeps PID)"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Shebang (",(0,r.kt)("inlineCode",{parentName:"td"},"#!/"),")")))),(0,r.kt)("h3",{id:"conditionals"},"Conditionals"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Operator"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Meaning"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Example"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"-ne")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Not Equal"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"$a -ne $b")),(0,r.kt)("td",{parentName:"tr",align:"center"},"True if ",(0,r.kt)("inlineCode",{parentName:"td"},"$a")," is not equal to ",(0,r.kt)("inlineCode",{parentName:"td"},"$b"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"-ge")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Greater than or Equal To"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"$x -ge $y")),(0,r.kt)("td",{parentName:"tr",align:"center"},"True if ",(0,r.kt)("inlineCode",{parentName:"td"},"$x")," is greater than or equal to ",(0,r.kt)("inlineCode",{parentName:"td"},"$y"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"!=")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Not Equal (for strings)"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'"$str1" != "$str2"')),(0,r.kt)("td",{parentName:"tr",align:"center"},"True if ",(0,r.kt)("inlineCode",{parentName:"td"},"$str1")," is not equal to ",(0,r.kt)("inlineCode",{parentName:"td"},"$str2"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"=")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Equal (for strings)"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'"$str1" = "$str2"')),(0,r.kt)("td",{parentName:"tr",align:"center"},"True if ",(0,r.kt)("inlineCode",{parentName:"td"},"$str1")," is equal to ",(0,r.kt)("inlineCode",{parentName:"td"},"$str2"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"-lt")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Less Than"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"$p -lt $q")),(0,r.kt)("td",{parentName:"tr",align:"center"},"True if ",(0,r.kt)("inlineCode",{parentName:"td"},"$p")," is less than ",(0,r.kt)("inlineCode",{parentName:"td"},"$q"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"-gt")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Greater Than"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"$m -gt $n")),(0,r.kt)("td",{parentName:"tr",align:"center"},"True if ",(0,r.kt)("inlineCode",{parentName:"td"},"$m")," is greater than ",(0,r.kt)("inlineCode",{parentName:"td"},"$n"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"-le")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Less Than or Equal To"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"$i -le $j")),(0,r.kt)("td",{parentName:"tr",align:"center"},"True if ",(0,r.kt)("inlineCode",{parentName:"td"},"$i")," is less than or equal to ",(0,r.kt)("inlineCode",{parentName:"td"},"$j"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"-f")),(0,r.kt)("td",{parentName:"tr",align:"center"},"File Exists"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'-f "$file"')),(0,r.kt)("td",{parentName:"tr",align:"center"},"True if the file ",(0,r.kt)("inlineCode",{parentName:"td"},"$file")," exists")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"-s")),(0,r.kt)("td",{parentName:"tr",align:"center"},"File is Not Empty (Size > 0)"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'-s "$file"')),(0,r.kt)("td",{parentName:"tr",align:"center"},"True if the file ",(0,r.kt)("inlineCode",{parentName:"td"},"$file")," exists and is not empty")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"-x")),(0,r.kt)("td",{parentName:"tr",align:"center"},"File is Executable"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'-x "$script"')),(0,r.kt)("td",{parentName:"tr",align:"center"},"True if the script ",(0,r.kt)("inlineCode",{parentName:"td"},"$script")," is executable")))),(0,r.kt)("h3",{id:"wait-------"},"wait, ;, &&, ||, `, $#, $?, $()"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Command"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Short Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"command1; command2")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Run 'command1' followed by 'command2'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"ls; pwd")),(0,r.kt)("td",{parentName:"tr",align:"center"},"List files and then print the current directory")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"mkdir myfolder; cd myfolder")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Create a folder and then navigate into it")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"command1 ","|","|"," command2"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Run 'command1', if it fails, run 'command2'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"ls /nonexistent ","|","|",' echo "Directory not found"'),(0,r.kt)("td",{parentName:"tr",align:"center"},"List a directory, and if it doesn't exist, display an error message")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"command1 && command2")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Run 'command1', if it succeeds, run 'command2'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"git pull && npm install")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Pull from a Git and install Node.js packages if the pull is successful")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"wait")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Pause execution until all background jobs are done")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'sleep 10 & wait; echo "hi""')),(0,r.kt)("td",{parentName:"tr",align:"center"},"Wait for background jobs to finish and then display a message")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"`command`")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Executes ",(0,r.kt)("inlineCode",{parentName:"td"},"command")," and returns its output as text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"$()")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Executes a command within parentheses and returns its output")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"output=$(command)")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Executes ",(0,r.kt)("inlineCode",{parentName:"td"},"command")," and stores its output in ",(0,r.kt)("inlineCode",{parentName:"td"},"output"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"$#")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Number of arguments passed to script")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"$?")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Exit or return value of the last executed command (0 for success)")))),(0,r.kt)("h3",{id:"echo-env-export-set-unset-variables"},"echo, env, export, set, unset, variables"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Commands"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"VAR_NAME=val")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Set ",(0,r.kt)("inlineCode",{parentName:"td"},"VAR_NAME")," to ",(0,r.kt)("inlineCode",{parentName:"td"},"val"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"set")),(0,r.kt)("td",{parentName:"tr",align:"center"},"displays shell variables and functions")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"set -o")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Display current shell options")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"set -e")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Exit immediately if a command in script exits with non-zero status")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"unset MYVAR")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Unset the environment variable named ",(0,r.kt)("inlineCode",{parentName:"td"},"VAR_NAME"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"export VAR")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Make var available to child processes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"env")),(0,r.kt)("td",{parentName:"tr",align:"center"},"View current environment vars")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"echo $VAR")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Display value of ",(0,r.kt)("inlineCode",{parentName:"td"},"VAR"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"echo $PATH")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Display value of ",(0,r.kt)("inlineCode",{parentName:"td"},"PATH"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"echo $HOME")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Display user's home directory")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"echo $EDITOR")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Display default text editor")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"echo $HISTFILE")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Display command history file")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"echo $USER")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Display current username")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"echo $?")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Display last command exit status")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"echo $PS1")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Display the shell prompt")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"echo -e")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Enable interpretation of backslash escapes in the string")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},'echo -e "hi \\n"')),(0,r.kt)("td",{parentName:"tr",align:"center"},'Display "hi" with a newline character')))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Use ",(0,r.kt)("inlineCode",{parentName:"p"},"export")," when you want to make a variable available to child processes\nUse ",(0,r.kt)("inlineCode",{parentName:"p"},"set")," primarily for managing shell options and attributes, but it can also be used to set local variables")),(0,r.kt)("h3",{id:"source-alias-type"},"source, alias, type"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Command"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"source")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Load functions into the current shell session")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"source ~/.bashrc")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Reloads the user's Bash profile")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"source my_script.sh")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Executes a shell script within the current shell")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"alias")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Create or display command aliases")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"alias ll='ls -l'")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Creates an alias 'll' for the 'ls -l' command")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"alias c=clear")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Creates an alias 'c' for the 'clear' command")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"unalias c")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Remove the alias 'c' for the 'clear' command")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:"center"},"information about a command")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"type ls")),(0,r.kt)("td",{parentName:"tr",align:"center"},"output: ls is an alias for ls $LS_OPTIONS")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"type ssh")),(0,r.kt)("td",{parentName:"tr",align:"center"},"output: ssh is /usr/bin/ssh")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"type source")),(0,r.kt)("td",{parentName:"tr",align:"center"},"output: source is a shell builtin")))),(0,r.kt)("h3",{id:"history"},"history"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Commands"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"history 5")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Displays the last 5 commands in the history")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"!!")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Repeats the last executed command")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"!*")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Represents all arguments of the last command")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"!n")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Repeats the nth command in ",(0,r.kt)("inlineCode",{parentName:"td"},"history"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"!-n")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Repeats the nth command from the current command")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"!string")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Repeats the most recent command that starts with ",(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"!:1"),", ",(0,r.kt)("inlineCode",{parentName:"td"},"!:2"),", ..."),(0,r.kt)("td",{parentName:"tr",align:"center"},"Represents the first, second, etc. arguments of the last command")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"!:0")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Represents the command + arguments")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"command !:0-2")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Executes the ",(0,r.kt)("strong",{parentName:"td"},"command")," with the first two arguments of the last command")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"command !:1-2")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Executes the ",(0,r.kt)("strong",{parentName:"td"},"command")," with the second and third arguments of the last command")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"command !:2*")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Executes ",(0,r.kt)("strong",{parentName:"td"},"command")," from the second arguments of the last command")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"some !571:2*")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Executes ",(0,r.kt)("strong",{parentName:"td"},"some")," from the second arguments of 571st command in the history")))),(0,r.kt)("h3",{id:"prompt-shell"},"Prompt Shell"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'echo $PS1\n\nPS1=\'$(if [ $? -eq 0 ]; then echo -e "\\[\\033[42m\\] \\[\\033[0m\\]"; else echo -e "\\[\\033[41m\\] \\[\\033[0m\\]"; fi) \\[\\033[1;32m\\]$(if [ $(jobs | wc -l) -gt 0 ]; then echo -n "\\j "; fi)\\[\\033[1;36m\\]\\u\\[\\033[0m\\] \\[\\033[1;33m\\]\\w\\[\\033[0m\\] \\[\\033[1;34m\\]$(if [ $(date +%H) -ge 6 -a $(date +%H) -lt 18 ]; then echo -n "\u2600\ufe0f"; else echo -n "\ud83c\udf19"; fi)\\[\\033[0m\\] \'\n\n# you may put your PS1 in .bashrc\nnano .bashrc\n')),(0,r.kt)("h3",{id:"case-insensitive-auto-completion"},"Case-insensitive Auto completion"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Add the following line to the /etc/inputrc file to enable case-insensitive auto completion\necho 'set completion-ignore-case On' | sudo tee -a /etc/inputrc\n\n# or as root\necho 'set completion-ignore-case On' >> /etc/inputrc \n\n# or for current user only\necho \"set completion-ignore-case on\" >> ~/.inputrc\n")),(0,r.kt)("h3",{id:"simple-bash-scripts"},"Simple Bash Scripts"),(0,r.kt)("h4",{id:"mouse-location"},"Mouse location"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"while true; do\n  sleep 2\n  xdotool getmouselocation\ndone\n")),(0,r.kt)("h4",{id:"get-screen-resolution"},"Get screen resolution"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"RES=$(xdpyinfo | grep dimensions | awk '{print $2}')\nWIDTH=$(echo $RES | awk -Fx '{print $1}')\nHEIGHT=$(echo $RES | awk -Fx '{print $2}')\n")),(0,r.kt)("h4",{id:"click-move-and-scroll-on-the-screen"},"Click, Move and scroll on the screen"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\n# Usage: ./click2.bash 3 30\n\n# Check for two arguments\nif [[ $# -ne 3 ]]; then\n echo "Usage: $0 <mouse idle time in seconds> <sleep time in each loop> <specific action each Nth time>"\n exit 1\nfi\n\nmousemoveAndClick() {\n # Move the mouse to the specified coordinates\n xdotool mousemove $1 $2\n # mouse click\n xdotool click 1\n # Sleep for 1 second\n sleep 1\n}\n\nscroll() {\n local direction=$1\n local count=$2\n if [[ $direction == "up" ]]; then\n  for i in $(seq 1 $count); do\n   xdotool click 4\n   sleep 0.5\n  done    \n elif [[ $direction == "down" ]]; then\n  for i in $(seq 1 $count); do   \n   xdotool click 5 \n   sleep 0.5\n  done\n fi\n}\n\nremove_esc() {\n # Move the mouse to the specified coordinates\n xdotool mousemove 1575 572\n # mouse click\n xdotool click 1\n # Sleep for 1 second\n sleep 1\n}\n\npress_esc_and_click() {\n # Press ESC\n xdotool key Escape\n # Sleep for 1 second\n sleep 1\n # mouse click\n xdotool click 1\n remove_esc\n}\n\n\n\nbuy() {\n # Move the mouse to the specified coordinates\n xdotool mousemove 1556 1230\n # mouse click\n xdotool click 1\n # Sleep for 1 second\n sleep 1\n}\n\ncounter=0\n# Get the idle time in milliseconds\nIDLE_TIME=$(echo "$1 * 1000" | bc)\n\nwhile true; do\n # Get the current idle time of the mouse pointer in milliseconds\n IDLE=$(xprintidle)\n\n # Check if the mouse has been idle for at least the specified time\n if [[ $IDLE -ge $IDLE_TIME ]]; then\n   \n  ((counter++))\n  echo "Increasing $counter"\n\n  # Boss\n  mousemoveAndClick 34 393\n  press_esc_and_click\n  \n  # top left\n  mousemoveAndClick 1173 647\n  buy\n\n  if [[ $((counter % $3)) -eq 0 ]]; then\n   scroll "down" 40\n  fi\n fi\n\n # Sleep for specified time\n sleep $2\ndone\n')),(0,r.kt)("p",null,"And run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x click.sh\n./click.sh 1 30 50\n")),(0,r.kt)("h2",{id:"zsh"},"zsh"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S zsh\n")),(0,r.kt)("h2",{id:"font"},"Font"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Monospace 12\n")))}c.isMDXComponent=!0}}]);