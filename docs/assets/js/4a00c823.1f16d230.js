"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[234],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>v});var s=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,s,a=function(e,n){if(null==e)return{};var t,s,a={},r=Object.keys(e);for(s=0;s<r.length;s++)t=r[s],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)t=r[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=s.createContext({}),d=function(e){var n=s.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=d(e.components);return s.createElement(i.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},m=s.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=d(t),m=a,v=u["".concat(i,".").concat(m)]||u[m]||c[m]||r;return t?s.createElement(v,l(l({ref:n},p),{},{components:t})):s.createElement(v,l({ref:n},p))}));function v(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=m;var o={};for(var i in n)hasOwnProperty.call(n,i)&&(o[i]=n[i]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var d=2;d<r;d++)l[d]=t[d];return s.createElement.apply(null,l)}return s.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6014:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=t(7462),a=(t(7294),t(3905));const r={},l="Network",o={unversionedId:"network",id:"network",title:"Network",description:"This section is a comprehensive guide to various topics related to Networking, including disabling IPv6, setting up DNS servers, VPN servers, and proxy servers. There are also topics on how to use different VPN services and redirect network traffic. This section provides in-depth information on how to configure different VPN protocols like OpenVPN, V2Ray, ShadowSocks, and WireGuard.",source:"@site/docs/network.md",sourceDirName:".",slug:"/network",permalink:"/linux-cheat-sheet/docs/network",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Linux",permalink:"/linux-cheat-sheet/docs/linux"},next:{title:"Raspberry pi",permalink:"/linux-cheat-sheet/docs/raspberry pi"}},i={},d=[{value:"Disable IPV6",id:"disable-ipv6",level:2},{value:"Setup DNS",id:"setup-dns",level:2},{value:"Using resolv.conf",id:"using-resolvconf",level:3},{value:"Using systemd",id:"using-systemd",level:3},{value:"DNS Server - dhclient",id:"dns-server---dhclient",level:3},{value:"Flush System Settings",id:"flush-system-settings",level:2},{value:"VPN over SSH",id:"vpn-over-ssh",level:2},{value:"VPN Over Socks  ( openVPN )",id:"vpn-over-socks---openvpn-",level:3},{value:"SSH Dynamic Tunneling",id:"ssh-dynamic-tunneling",level:2},{value:"Open an application over socks",id:"open-an-application-over-socks",level:2},{value:"Setup DNS Server",id:"setup-dns-server",level:2},{value:"Using Systemd",id:"using-systemd-1",level:3},{value:"Using dnsmasq",id:"using-dnsmasq",level:3},{value:"Outline Proxy Server + Jump Server",id:"outline-proxy-server--jump-server",level:2},{value:"Initialization",id:"initialization",level:3},{value:"Outline Server",id:"outline-server",level:3},{value:"Jump server",id:"jump-server",level:3},{value:"With IPTables",id:"with-iptables",level:4},{value:"Using SSH Forward",id:"using-ssh-forward",level:4},{value:"Using socat",id:"using-socat",level:4},{value:"Optimization",id:"optimization",level:4},{value:"Fake Traffic script",id:"fake-traffic-script",level:4},{value:"Client-Side",id:"client-side",level:3},{value:"ShadowSocks Json config example ( rust )",id:"shadowsocks-json-config-example--rust-",level:4},{value:"ShadowSocks SS URL Format",id:"shadowsocks-ss-url-format",level:4},{value:"OpenVpn Server",id:"openvpn-server",level:2},{value:"V2Ray VPN/Proxy Server",id:"v2ray-vpnproxy-server",level:2},{value:"disable ping",id:"disable-ping",level:3},{value:"Change server hostname",id:"change-server-hostname",level:3},{value:"Add domain to the cloudflare",id:"add-domain-to-the-cloudflare",level:3},{value:"XUI Panel",id:"xui-panel",level:3},{value:"Nekoray",id:"nekoray",level:3},{value:"ShadowSocks Server",id:"shadowsocks-server",level:2},{value:"Server",id:"server",level:3},{value:"Client",id:"client",level:3},{value:"WireGuard VPN Server",id:"wireguard-vpn-server",level:2},{value:"Server Configuration",id:"server-configuration",level:3},{value:"Peer Configuration",id:"peer-configuration",level:3},{value:"Redirecting the whole network traffic",id:"redirecting-the-whole-network-traffic",level:2},{value:"Proxy udp traffic from ssh",id:"proxy-udp-traffic-from-ssh",level:2},{value:"Free VPNs",id:"free-vpns",level:2},{value:"VPNBook",id:"vpnbook",level:3},{value:"Protonvpn",id:"protonvpn",level:3},{value:"Install",id:"install",level:4},{value:"OpenVpn",id:"openvpn",level:4},{value:"WireGuard",id:"wireguard",level:4},{value:"Hide.me",id:"hideme",level:3},{value:"Windscribe",id:"windscribe",level:3},{value:"Warp",id:"warp",level:3},{value:"Set System-wide DNS",id:"set-system-wide-dns",level:2},{value:"Shekan DNS",id:"shekan-dns",level:3},{value:"403 DNS",id:"403-dns",level:3},{value:"electrotm DNS",id:"electrotm-dns",level:3},{value:"OpenDns",id:"opendns",level:3},{value:"Global DNS",id:"global-dns",level:3},{value:"Setting domains directly in /etc/hosts",id:"setting-domains-directly-in-etchosts",level:3},{value:"Simple python http.server",id:"simple-python-httpserver",level:2}],p={toc:d},u="wrapper";function c(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,s.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"network"},"Network"),(0,a.kt)("p",null,"This section is a comprehensive guide to various topics related to Networking, including disabling IPv6, setting up DNS servers, VPN servers, and proxy servers. There are also topics on how to use different VPN services and redirect network traffic. This section provides in-depth information on how to configure different VPN protocols like OpenVPN, V2Ray, ShadowSocks, and WireGuard."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#disable-ipv6"},"Disable IPV6")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#setup-dns"},"Setup DNS"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#using-resolvconf"},"Using resolv.conf")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#using-systemd"},"Using systemd")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#dns-server---dhclient"},"DNS Server - dhclient")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#flush-system-settings"},"Flush System Settings")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#vpn-over-ssh"},"VPN over SSH"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#vpn-over-socks---openvpn-"},"VPN Over Socks  ( openVPN )")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#ssh-dynamic-tunneling"},"SSH Dynamic Tunneling")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#open-an-application-over-socks"},"Open an application over socks")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#setup-dns-server"},"Setup DNS Server"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#using-systemd-1"},"Using Systemd")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#using-dnsmasq"},"Using dnsmasq")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#outline-proxy-server--jump-server"},"Outline Proxy Server + Jump Server"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#initialization"},"Initialization")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#outline-server"},"Outline Server")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#jump-server"},"Jump server"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#with-iptables"},"With IPTables")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#using-ssh-forward"},"Using SSH Forward")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#using-socat"},"Using socat")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#optimization"},"Optimization")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#fake-traffic-script"},"Fake Traffic script")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#client-side"},"Client-Side"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#shadowsocks-json-config-example--rust-"},"ShadowSocks Json config example ( rust )")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#shadowsocks-ss-url-format"},"ShadowSocks SS URL Format")))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#openvpn-server"},"OpenVpn Server")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#v2ray-vpnproxy-server"},"V2Ray VPN/Proxy Server"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#disable-ping"},"disable ping")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#change-server-hostname"},"Change server hostname")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#add-domain-to-the-cloudflare"},"Add domain to the cloudflare")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#xui-panel"},"XUI Panel")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#nekoray"},"Nekoray")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#shadowsocks-server"},"ShadowSocks Server"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#server"},"Server")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#client"},"Client")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#wireguard-vpn-server"},"WireGuard VPN Server"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#server-configuration"},"Server Configuration")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#peer-configuration"},"Peer Configuration")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#redirecting-the-whole-network-traffic"},"Redirecting the whole network traffic")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#proxy-udp-traffic-from-ssh"},"Proxy udp traffic from ssh")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#free-vpns"},"Free VPNs"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#vpnbook"},"VPNBook")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#protonvpn"},"Protonvpn"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#install"},"Install")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#openvpn"},"OpenVpn")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#wireguard"},"WireGuard")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#hideme"},"Hide.me")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#windscribe"},"Windscribe")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#set-system-wide-dns"},"Set System-wide DNS"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#shekan-dns"},"Shekan DNS")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#403-dns"},"403 DNS")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#global-dns"},"Global DNS")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#setting-domains-directly-in-etchosts"},"Setting domains directly in /etc/hosts"))))),(0,a.kt)("h2",{id:"disable-ipv6"},"Disable IPV6"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/sysctl.conf\n\nnet.ipv6.conf.all.disable_ipv6=1\nnet.ipv6.conf.default.disable_ipv6=1\n\nsudo sysctl -p \n")),(0,a.kt)("h2",{id:"setup-dns"},"Setup DNS"),(0,a.kt)("h3",{id:"using-resolvconf"},"Using resolv.conf"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'sudo nano /etc/resolv.conf\nnameserver 1.1.1.1\nnameserver 1.0.0.1\nnameserver 208.67.222.222\nnameserver 208.67.220.220\nnameserver 8.8.8.8\nnameserver 8.8.4.4\n\n# echo "nameserver 8.8.8.8" > /etc/resolv.conf\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl enable resolvconf\nsudo nano /etc/resolvconf/resolv.conf.d/head\nsudo nano /etc/resolvconf/resolv.conf.d/base\nnameserver 1.1.1.1\nnameserver 208.67.222.222\nnameserver 208.67.220.220\nnameserver 8.8.8.8\n")),(0,a.kt)("h3",{id:"using-systemd"},"Using systemd"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/resolved.conf\n[Resolve]\nDNS=1.1.1.1 208.67.222.222 208.67.220.220 8.8.8.8\n\nsudo nano /run/systemd/resolve/stub-resolv.conf\nnameserver 1.1.1.1\nnameserver 208.67.222.222\nnameserver 208.67.220.220\nnameserver 8.8.8.8\n\nsudo systemctl enable systemd-resolved\nsudo systemctl restart systemd-resolved\n\n# resolvectl dns enp3s0 1.1.1.1 \n# resolvectl dns enp1s0f0u6 1.1.1.1\nresolvectl dns\n")),(0,a.kt)("h3",{id:"dns-server---dhclient"},"DNS Server - dhclient"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/dhcp/dhclient.conf\nprepend domain-name-servers 208.67.222.222, 208.67.220.220, 8.8.8.8\n\nsudo nano /etc/network/interfaces\niface eth0 inet static\n  dns-nameservers 208.67.222.222 208.67.220.220 8.8.8.8\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"resolvectl dns eth0 # make sure dns is set\n# permanent? \n")),(0,a.kt)("h2",{id:"flush-system-settings"},"Flush System Settings"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo killall sslocal winedevice.exe wineserver services.exe EpicGamesLaunch EpicWebHelper.e explorer.exe lutris-wrapper:;\nsudo killall steamwebhelper gitstatusd steam;\nsudo killall -9 sslocal winedevice.exe wineserver services.exe EpicGamesLaunch EpicWebHelper.e explorer.exe lutris-wrapper:;\nsudo killall -9 steamwebhelper gitstatusd steam;\npkill -f -e -c lutris-wrapper;\npkill -f -e -c lutris;\npkill -f -e -c wine;\npkill -f -e -c steam;\npkill -f -e -c sslocal;\nsudo systemctl stop shadowsocks-rust-local@config;\n\nsudo systemd-resolve --flush-caches;\nsudo resolvectl flush-caches;\nsudo ip link delete tun0;\nsudo wg-quick down wg0;\nsudo systemctl daemon-reload;\nsudo ip route flush table main;\nsudo iptables --flush;\nsudo systemctl restart network;\nsudo systemctl restart NetworkManager;\nsudo sysctl -p;\n\nsudo systemctl restart shadowsocks-rust-local@config;\nsync; echo 3 > /proc/sys/vm/drop_caches;\n")),(0,a.kt)("h2",{id:"vpn-over-ssh"},"VPN over SSH"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S sshuttle\n\nsudo sshuttle -v -r mlibre@51.89.88.80 0/0 -x 51.89.88.80 --disable-ipv6\n# sudo sshuttle -vvvv -r mlibre@51.89.88.80 0/0 -x 51.89.88.80 --dns --disable-ipv6\n# sudo sshuttle -vvvv -r mlibre@51.89.88.80 0.0.0.0/0 --dns --disable-ipv6\n")),(0,a.kt)("h3",{id:"vpn-over-socks---openvpn-"},"VPN Over Socks  ( openVPN )"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"SS server address: 87.80.80.80")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"nano mlibre.ovpn\nsocks-proxy 127.0.0.1 1090\nroute 87.80.80.80 255.255.255.255 net_gateway\nroute 192.168.0.0 255.255.0.0 net_gateway\n")),(0,a.kt)("h2",{id:"ssh-dynamic-tunneling"},"SSH Dynamic Tunneling"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ssh -D 0.0.0.0:8080 -N mlibre@51.89.88.80\n\n# Setup DNS\n\nfirefox: settings -> network -> socks5, proxy over dns\nchromium: search proxy in the setting. open system proxy settings. manual specified: socks proxy: localhost 1080\n")),(0,a.kt)("h2",{id:"open-an-application-over-socks"},"Open an application over socks"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"torsocks deluge\ntsokcs deluge\n")),(0,a.kt)("h2",{id:"setup-dns-server"},"Setup DNS Server"),(0,a.kt)("h3",{id:"using-systemd-1"},"Using Systemd"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/resolved.conf\n[Resolve]\nDNS=1.1.1.1 9.9.9.9#dns.quad9.net 8.8.8.8\nFallbackDNS=208.67.222.222 208.67.220.220\n#Domains=\n#LLMNR=no\n#MulticastDNS=no\nDNSSEC=yes\nDNSOverTLS=no\nCache=yes        \nDNSStubListener=yes\nReadEtcHosts=yes\n\nsudo systemctl enable systemd-resolved.service\nsudo systemctl restart systemd-resolved.service\nsudo systemctl restart NetworkManager\n")),(0,a.kt)("h3",{id:"using-dnsmasq"},"Using dnsmasq"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install dnsmasq\n")),(0,a.kt)("h2",{id:"outline-proxy-server--jump-server"},"Outline Proxy Server + Jump Server"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Server: NetherLand"),(0,a.kt)("li",{parentName:"ul"},"OS: Ubuntu 22.04")),(0,a.kt)("h3",{id:"initialization"},"Initialization"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ssh root@51.89.88.80\npasswd\nadduser mlibre\n\napt update\napt dist-upgrade\napt install htop sudo psmisc net-tools curl ntpdate\nsudo apt purge snapd ufw\nsudo apt autoremove --purge\nsudo ntpdate time.nist.gov\n\nnano /etc/sudoers\nmlibre  ALL=(ALL:ALL) NOPASSWD: ALL\n\nnano /etc/hosts\n127.0.0.1 mlibre\n\nsudo systemctl disable rsyslog\nsudo systemctl disable apparmor.service\nsudo systemctl disable systemd-journald\nsudo systemctl disable apport-autoreport.path\nsudo systemctl disable apport-forward.socket\n\n# CTRL +D\nssh-keygen\nssh-copy-id -i ~/.ssh/id_rsa.pub mlibre@51.89.88.80\n# ssh-copy-id -i ~/.ssh/id_rsa.pub -p 2138 mlibre@87.107.164.69\nssh mlibre@51.89.88.80\n\nsu\nssh-keygen\nssh-copy-id -i ~/.ssh/id_rsa.pub root@51.89.88.80\n\n## Both server and client\nsudo nano /etc/ssh/sshd_config\nPermitTunnel yes\n# ClientAliveInterval 300\n# ClientAliveCountMax 6\nTCPKeepAlive yes\nAllowAgentForwarding yes\nAllowTcpForwarding yes\nPermitTunnel yes\nGatewayPorts yes\n\nsudo systemctl daemon-reload\nsudo systemctl restart sshd\nsudo systemctl status sshd\n\nsudo nano /etc/sysctl.conf\nnet.ipv4.ip_forward=1\nnet.ipv4.tcp_fastopen=3\nfs.file-max = 5000000\n\nsudo sysctl -p\n\nsudo nano /etc/resolv.conf\nnameserver 1.1.1.1      \nnameserver 208.67.222.222\nnameserver 208.67.220.220\nnameserver 8.8.8.8\n\nsudo ufw allow 9090/udp\nsudo ufw allow 9090/tcp\nsudo ufw allow 9090\nsudo ufw allow OpenSSH\nsudo ufw allow dns\nsudo ufw allow 5353/tcp\nsudo ufw allow 5353/udp\nsudo ufw allow 443/tcp\nsudo ufw allow https\nsudo ufw allow ssh\nsudo ufw allow www\nsudo ufw allow bootps\n\nsudo ufw disable\nsudo systemctl enable ufw\nsudo ufw enable\nsudo systemctl restart ufw\nsudo systemctl status ufw\nsudo ufw status\n")),(0,a.kt)("h3",{id:"outline-server"},"Outline Server"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Download outline manager in your local linux system")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://getoutline.org/get-started/#step-1"},"https://getoutline.org/get-started/#step-1"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run and follow instructions")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Save the credentials"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'...\n{"apiUrl":"https://41.249.49.191:13108/112-XA1EFIGPw","certSha256":"121"}\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"In server: open ssh, https and other ports + ports mentioned in outline manager settings:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  sudo ufw allow 51449\n  sudo ufw allow 51449/tcp\n  sudo ufw allow 51449/udp\n  sudo ufw allow 64920\n  sudo ufw allow 64920/udp\n  sudo ufw allow 64920/tcp\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Open Manager")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Create keys")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Share keys"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Keys are like this\nss://BASE64 STRING@IP:PORT/?outline=1\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"You can also open keys with ShadowSocks")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/teddysun/across/blob/master/bbr.sh"},"BBR script")))),(0,a.kt)("h3",{id:"jump-server"},"Jump server"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"SSHD configs:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/ssh/sshd_config\nAllowAgentForwarding yes\nAllowTcpForwarding yes\nTCPKeepAlive yes\nPermitTunnel yes\nGatewayPorts yes\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"SysCtl Settings:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/sysctl.conf\nnet.ipv4.tcp_fastopen=3\nnet.ipv4.ip_forward=1\n\nsudo sysctl -p\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/teddysun/across/blob/master/bbr.sh"},"BBR script"))),(0,a.kt)("h4",{id:"with-iptables"},"With IPTables"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install iptables-persistent\nsudo nano /etc/iptables/rules.v4\n\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\nCOMMIT\n*nat\n:PREROUTING ACCEPT [18895:9137441]\n:INPUT ACCEPT [6852:1538364]\n:OUTPUT ACCEPT [31:7269]\n:POSTROUTING ACCEPT [31:7269]\n\n-A PREROUTING -d 87.107.164.69/32 -p udp -m udp --dport 67 -j DNAT --to-destination 46.249.49.193:443\n-A PREROUTING -d 87.107.164.69/32 -p tcp -m tcp --dport 67 -j DNAT --to-destination 46.249.49.193:443\n\n-A PREROUTING -d 87.107.164.69/32 -p udp -m udp --dport 34964 -j DNAT --to-destination 46.249.49.193:34964\n-A PREROUTING -d 87.107.164.69/32 -p tcp -m tcp --dport 34964 -j DNAT --to-destination 46.249.49.193:34964\n\n#-A PREROUTING -p tcp -m tcp --dport 64921 -j DNAT --to-destination 46.249.49.193:64920\n#-A PREROUTING -p udp -m udp --dport 64921 -j DNAT --to-destination 46.249.49.193:64920\n#-A PREROUTING -p tcp -m tcp --dport 22055 -j DNAT --to-destination 46.249.49.193:22054\n#-A PREROUTING -p udp -m udp --dport 22055 -j DNAT --to-destination 46.249.49.193:22054\n-A POSTROUTING -j MASQUERADE\nCOMMIT\n\nsudo systemctl enable netfilter-persistent.service\nsudo systemctl restart netfilter-persistent.service\n")),(0,a.kt)("h4",{id:"using-ssh-forward"},"Using SSH Forward"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Client -> A (Jump Server) -> B (Outline Server)")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Install shadowSocks in Server B"),(0,a.kt)("li",{parentName:"ul"},"Run following commands in server A")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# Server A IP: 87.107.164.69\n# Server A SSH Port: 2138\n# Server B IP: 46.249.49.193\n# Server B SSH Port: 56777\n# Server B ShadowSocks/Outline ports: 64920, 56777, 51449\n# ufw allow ......\nssh-copy-id -i ~/.ssh/id_rsa.pub mlibre@46.249.49.193 -p 56777\nsudo ssh-copy-id -i /root/.ssh/id_rsa.pub root@46.249.49.193 -p 56777\n\nssh -N -L 0.0.0.0:64920:46.249.49.193:64920 mlibre@46.249.49.193 -p 56777\n#                 APort BIP           BPort       BIP               BSSHPort\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Make a startup script")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/system/sshtunnel.service\n\n[Unit]\nDescription=SSH Tunnel\nAfter=network.target\n\n[Service]\nUser=mlibre\nRestart=always\nRestartSec=20\nExecStart=ssh -N -L 0.0.0.0:64920:46.249.49.193:64920 mlibre@46.249.49.193 -p 56777\n\n[Install]\nWantedBy=multi-user.target\n\nsudo systemctl enable sshtunnel\nsudo systemctl restart sshtunnel\nsudo systemctl status sshtunnel\nsudo journalctl -f -u sshtunnel\n")),(0,a.kt)("h4",{id:"using-socat"},"Using socat"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo socat -dd TCP4-LISTEN:8000,fork TCP4:Shadowsocks-server-ip:9000\nsudo socat -dd UDP-LISTEN:8000,fork UDP:Shadowsocks-server-ip:9000\n")),(0,a.kt)("h4",{id:"optimization"},"Optimization"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/shadowsocks/shadowsocks/wiki/Optimizing-Shadowsocks"},"https://github.com/shadowsocks/shadowsocks/wiki/Optimizing-Shadowsocks")),(0,a.kt)("h4",{id:"fake-traffic-script"},"Fake Traffic script"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/malkemit/namizun"},"namizun"))),(0,a.kt)("h3",{id:"client-side"},"Client-Side"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"SSHD configs:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/ssh/sshd_config\nAllowAgentForwarding yes\nAllowTcpForwarding yes\nTCPKeepAlive yes\nPermitTunnel yes\nGatewayPorts yes\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"SysCtl Settings:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/sysctl.conf\nnet.ipv4.tcp_fastopen=3\nnet.ipv4.ip_forward=1\n\nsudo sysctl -p\n")),(0,a.kt)("h4",{id:"shadowsocks-json-config-example--rust-"},"ShadowSocks Json config example ( rust )"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "servers": [\n      {\n          "address": "87.107.164.69", // Server A IP Address\n          "port": 64920,\n          "password": "password", // Extracted OUTLINE Key Information\n          "method":"chacha20-ietf-poly1305", // Extracted OUTLINE Key Information\n          "timeout": 86400\n      }\n    ],\n    "mode":"tcp_and_udp",\n    "local_port":1080,\n    "local_address": "127.0.0.1",\n    "fast_open": true\n}\n')),(0,a.kt)("h4",{id:"shadowsocks-ss-url-format"},"ShadowSocks SS URL Format"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'sslocal --server-url "ss://dsadsadasda@11.11.49.193:11111" --local-addr "127.0.0.1:1080"\n')),(0,a.kt)("h2",{id:"openvpn-server"},"OpenVpn Server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'https://github.com/mlibre/openvpn-install\ncurl -O https://raw.githubusercontent.com/angristan/openvpn-install/master/openvpn-install.sh\nchmod +x openvpn-install.sh\nsudo ./openvpn-install.sh\nport: random, tcp, curreny system resolver, compression yes\nscp -P 2138 mlibre@87.107.164.69:/home/mlibre/mlibre.ovpn .\n\nDNS_SERVER="1.1.1.1"\nsudo sh -c "echo nameserver $DNS_SERVER > /etc/resolv.conf"\nsudo sed -i \'/^\\s*#*DNS=/d\' /etc/systemd/resolved.conf && sudo sed -i \'$ a\\DNS=\'"$DNS_SERVER" /etc/systemd/resolved.conf\nsudo systemctl daemon-reload; wait;\nsudo systemctl restart systemd-networkd; wait;\nsudo systemctl restart systemd-resolved; wait;\nsudo systemd-resolve --flush-caches\nsudo resolvectl flush-caches\nsudo resolvectl dns eth0 "$DNS_SERVER"\nsudo resolvectl dns tun0 "$DNS_SERVER"\nsudo resolvectl dns enp3s0 "$DNS_SERVER"\nsudo resolvectl dns enp5s0 "$DNS_SERVER"\nsudo resolvectl dns docker0 "$DNS_SERVER"\nsudo resolvectl dns\nGlobal: 1.1.1.1\nLink 2 (enp3s0): 1.1.1.1\nLink 8 (tun0): 1.1.1.1\n\n\nAdd these lines to your .ovpn file:\n\nsocks-proxy 127.0.0.1 1080\nroute SHADOWSOCKS_SERVER_IP 255.255.255.255 net_gateway\n')),(0,a.kt)("h2",{id:"v2ray-vpnproxy-server"},"V2Ray VPN/Proxy Server"),(0,a.kt)("h3",{id:"disable-ping"},"disable ping"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/sysctl.conf\nnet.ipv4.conf.icmp_echo_ignore_all = 1\n\nsudo nano /etc/sysctl.d/sys.conf\nnet.ipv4.conf.icmp_echo_ignore_all = 1\n")),(0,a.kt)("h3",{id:"change-server-hostname"},"Change server hostname"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"vultr.com -> server setting -> ipv4 -> reverse DNS")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  proxychains ssh -p port true@000.000.13.13\n\n  sudo nano /etc/cloud/cloud.cfg\n  # preserve_hostname: true\n  \n  sudo nano /etc/hostname\n  domain.ga\n\n  sudo nano /etc/hosts\n  127.0.1.1 domain.ga\n\n  sudo hostnamectl set-hostname domain.ga\n")),(0,a.kt)("h3",{id:"add-domain-to-the-cloudflare"},"Add domain to the cloudflare"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"SSL/TLS: Full"),(0,a.kt)("li",{parentName:"ul"},"Disable DNSSEC, Always Use HTTPS, Automatic HTTPS Rewrites"),(0,a.kt)("li",{parentName:"ul"},"Enable TLS 1.3, HTTP2/3, GRPC, WS and ... in Network/SSL tab"),(0,a.kt)("li",{parentName:"ul"},"Enable Development mode"),(0,a.kt)("li",{parentName:"ul"},'Add a "A" DNS record: domain.ga, DNS only ( no proxy )'),(0,a.kt)("li",{parentName:"ul"},'Add a "A" DNS record: v4p.domain.ga, proxy'),(0,a.kt)("li",{parentName:"ul"},'Add a "AAAA" DNS record: v6.domain.ga, proxy ( don\'t make dns-only for ipv6 )')),(0,a.kt)("h3",{id:"xui-panel"},"XUI Panel"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo su\ncd\nbash <(curl -Ls https://raw.githubusercontent.com/NidukaAkalanka/x-ui-english/master/install.sh)\n# cat /usr/local/x-ui/bin/config.json\n# tar -czvf x-ui.tgz /usr/local/x-ui/\n# proxychains scp -P 3612 true@199.247.13.13:x-ui.tgz .\n# proxychains scp -P 3612 root@199.247.13.13:cert.crt .\n# proxychains scp -P 3612 root@199.247.13.13:private.key .\n\n\nx-ui\n# Open all ports\n# install BBR\n# Install ACME, certificate the root domain using cloudflare APIs\n# Set Panel port 8443\n# Set the certs address for panel\nls\nacme.sh --info\nacme.sh --list\n# lsof -i :80\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Open Panel (",(0,a.kt)("a",{parentName:"li",href:"https://domain.ga:8443/xui/inbounds"},"https://domain.ga:8443/xui/inbounds"),")"),(0,a.kt)("li",{parentName:"ul"},"Create a vmess-2086-ws-no-tls inbound ( image included )"),(0,a.kt)("li",{parentName:"ul"},"Create a vless-2052-grpc-nosniff inbound ( image included )",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},'Add this header => "X-Forwarded-Proto: https"'))),(0,a.kt)("li",{parentName:"ul"},"Create a trojan-xtls-443-direct-domain inbound ( image included )"),(0,a.kt)("li",{parentName:"ul"},"In firefox: Check Proxy DNS when using SOCKS v5")),(0,a.kt)("h3",{id:"nekoray"},"Nekoray"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Nekoray Supports SS, Vmess and ...."),(0,a.kt)("li",{parentName:"ul"},"Download from ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/Matsuridayo/nekoray/releases"},"https://github.com/Matsuridayo/nekoray/releases"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'aria2c -x 10 "https://github.com/MatsuriDayo/nekoray/releases/download/2.9/nekoray-2.9-2022-12-19-linux64.zip"\nunzip nekoray-2.9-2022-12-19-linux64.zip\ncd nekoray\n./nekoray\n# Settings -> security -> Skip TLS certificate\n# paste vmess setting. Address: portal.domain.ga, host: portal.domain.ga\n# paste vmess setting. Address: iv6.domain.ga, host: iv6.domain.ga\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Open Nekoray -> Routing Settings -> remote DNS: localhost")),(0,a.kt)("h2",{id:"shadowsocks-server"},"ShadowSocks Server"),(0,a.kt)("h3",{id:"server"},"Server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'sudo apt install shadowsocks-libev -y\nsudo nano /etc/shadowsocks-libev/config.json\n{\n    "server":["::1", "0.0.0.0"],\n    "mode":"tcp_and_udp",\n    "server_port":9090,\n    "password":"password",\n    "method":"chacha20-ietf-poly1305",\n    "timeout":1000,\n    "nameserver":"1.1.1.1",\n    "fast_open": true\n}\nsudo ufw allow 9090/udp\nsudo ufw allow 9090/tcp\nsudo ufw allow 1080/udp\nsudo ufw allow 1080/tcp\nsudo ufw allow 443\nsudo systemctl enable shadowsocks-libev.service\nsudo systemctl restart shadowsocks-libev.service\nsudo journalctl -f -u shadowsocks-libev.service\n\n# Custom instance\nsudo nano /etc/systemd/system/direct.service\n[Unit]\nDescription=Shadowsocks\nAfter=network.target\n\nStartLimitIntervalSec=30s\nStartLimitBurst=5\n\n[Service]\nType=simple\nUser=mlibre\nGroup=mlibre\nCapabilityBoundingSet=CAP_NET_BIND_SERVICE\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecStart=ss-server -c /etc/shadowsocks-libev/config.json\n\nRestart=always\nRestartSec=3s\n\n[Install]\nWantedBy=multi-user.target\n')),(0,a.kt)("h3",{id:"client"},"Client"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'sudo pamac install shadowsocks-rust-bin\nsudo nano /etc/shadowsocks/config.json \n{\n    "servers": [\n      {\n          "address": "51.89.88.80",\n          "port": 9090,\n          "password": "password",\n          "method":"chacha20-ietf-poly1305",\n          "timeout": 1000\n      }\n    ],\n    "mode":"tcp_and_udp",\n    "local_port":1080,\n    "local_address": "127.0.0.1",\n    "fast_open": true,\n    "dns": "1.1.1.1",\n    "remote_dns_address": "8.8.8.8"\n}\n\n# sudo systemctl disable shadowsocks-rust-local@config\n# sudo systemctl enable shadowsocks-rust-local@config\n# sudo systemctl restart shadowsocks-rust-local@config\n# sudo systemctl status shadowsocks-rust-local@config\n# journalctl -f -u shadowsocks-rust-local@config\n\n# sslocal -c /etc/shadowsocks/config.json -d\n# sslocal --config /etc/shadowsocks-rust/germany.json -v --outbound-bind-interface lo --tun-interface-name tun0\n\nsudo nano /lib/systemd/system/shadowsocks-rust-local@.service\n[Unit]\nDescription=Shadowsocks-rust Local Client Service for %I\nAfter=network.target\n\nStartLimitIntervalSec=30s\nStartLimitBurst=5\n\n[Service]\nType=simple\nDynamicUser=yes\nCapabilityBoundingSet=CAP_NET_BIND_SERVICE\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecStart=/usr/bin/sslocal --log-without-time -c /etc/shadowsocks/config.json\n\nRestart=always\nRestartSec=3s\n\n[Install]\nWantedBy=multi-user.target\n\n\n## Firefox\nsocks host: 127.0.0.1\nsocks port: 1080\nenable dns over proxy\n\nsudo resolvectl dns enp3s0 1.1.1.1\necho "nameserver 8.8.8.8" > /etc/resolv.conf\n')),(0,a.kt)("h2",{id:"wireguard-vpn-server"},"WireGuard VPN Server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -Syyuu wireguard extra/wireguard-tools resolvconf\nsudo apt update\napt-get purge nftables\nsudo apt dist-upgrade\nsudo apt install htop sudo wireguard wireguard-tools resolvconf iptables\nupdate-alternatives --set iptables /usr/sbin/iptables-legacy\n")),(0,a.kt)("h3",{id:"server-configuration"},"Server Configuration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"https://github.com/angristan/wireguard-install\ncurl -O https://raw.githubusercontent.com/angristan/wireguard-install/master/wireguard-install.sh\nchmod +x wireguard-install.sh\nsudo ./wireguard-install.sh\n")),(0,a.kt)("h3",{id:"peer-configuration"},"Peer Configuration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"resolvectl dns\nsudo resolvectl dns enp3s0 10.8.0.1\n# sudo resolvectl dns enp3s0 208.67.222.222\n\n\n# ON THE CLIENT\nsudo wg-quick up wg0\nsudo wg-quick down wg0\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ip route list default\n# Copy Device Name: eth0\nip -brief address show eth0\n# Copy The server public ip\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# https://github.com/mlibre/wireguard-install\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl stop wg-quick@wg0.service\nsudo systemctl disable wg-quick@wg0.service\nsudo systemctl enable wg-quick@wg0.service\nsudo systemctl start wg-quick@wg0.service\nsudo systemctl status wg-quick@wg0.service\nsudo wg\n# sudo wg-quick down wg0\n# sudo systemctl daemon-reload \n")),(0,a.kt)("h2",{id:"redirecting-the-whole-network-traffic"},"Redirecting the whole network traffic"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ip route add 192.168.1.0/24 dev ppp0\n# ppp0: vpn name\n# 192.168.1.0: IP range\n")),(0,a.kt)("h2",{id:"proxy-udp-traffic-from-ssh"},"Proxy udp traffic from ssh"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://superuser.com/questions/53103/udp-traffic-through-ssh-tunnel"},"https://superuser.com/questions/53103/udp-traffic-through-ssh-tunnel")),(0,a.kt)("h2",{id:"free-vpns"},"Free VPNs"),(0,a.kt)("h3",{id:"vpnbook"},"VPNBook"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Download OpenVpn file: ",(0,a.kt)("a",{parentName:"li",href:"https://www.vpnbook.com/freevpn"},"https://www.vpnbook.com/freevpn")),(0,a.kt)("li",{parentName:"ul"},"Import in NetworkManger"),(0,a.kt)("li",{parentName:"ul"},"Enter username and password from here: ",(0,a.kt)("a",{parentName:"li",href:"https://www.vpnbook.com/freevpn"},"https://www.vpnbook.com/freevpn"))),(0,a.kt)("h3",{id:"protonvpn"},"Protonvpn"),(0,a.kt)("h4",{id:"install"},"Install"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'sudo systemctl stop firewalld.service\nyay --noprovides --answerdiff None --answerclean None --mflags "--noconfirm"  -S protonvpn\n# proxychains yay --noprovides --answerdiff None --answerclean None --mflags "--noconfirm"  -S protonvpn\nprotonvpn\n# proxychain protonvpn\n')),(0,a.kt)("h4",{id:"openvpn"},"OpenVpn"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Download openVpn config file form here: ",(0,a.kt)("a",{parentName:"li",href:"https://account.protonvpn.com/downloads"},"https://account.protonvpn.com/downloads")),(0,a.kt)("li",{parentName:"ul"},"Copy openVPn credentials: ",(0,a.kt)("a",{parentName:"li",href:"https://account.protonvpn.com/account"},"https://account.protonvpn.com/account")),(0,a.kt)("li",{parentName:"ul"},"Network Manager: New -> Import OpenVpn Saved Configuration. Paste credentials")),(0,a.kt)("h4",{id:"wireguard"},"WireGuard"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -R firewalld\nsudo ufw disable\nsudo nano /etc/sysctl.conf\n# add: net.ipv4.ip_forward=1\n# net.ipv6.conf.all.forwarding=1\nsudo sysctl -p\nsudo pacman -S extra/wireguard-tools\n# yay -S  qomui\n# https://account.protonvpn.com/downloads#wireguard-configuration\nsudo nano /etc/wireguard/wg0.conf\n# past\n\nresolvectl dns\nsudo resolvectl dns enp3s0 10.2.0.1 # ip addr:(enp3s0). resolvectl dnsglobal:(10.2.0.1). can be added in POSTup wirgurd conf\nsudo wg-quick up wg0\nsudo wg-quick down wg0\nsudo wg\n")),(0,a.kt)("h3",{id:"hideme"},"Hide.me"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl stop firewalld.service\ncurl -L https://hide.me/download/linux-amd64 | tar -xJ && sudo ./install.sh\n# Extend free trail \n# https://member.hide.me/en/\nproxychains sudo ./hide.me token free-unlimited.hideservers.net\nproxychains sudo ./hide.me connect free-unlimited.hideservers.net\n")),(0,a.kt)("h3",{id:"windscribe"},"Windscribe"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl stop firewalld.service\nyay -S aur/windscribe-bin\n# proxychains yay -S aur/windscribe-bin\n")),(0,a.kt)("h3",{id:"warp"},"Warp"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pamac insatll cloudflare-warp-bin\n\nsudo nano /etc/systemd/resolved.conf\nResolveUnicastSingleLabel=yes\nsudo systemctl restart systemd-resolved.service\n\nsudo systemctl restart warp-svc.service \nsudo systemctl enable warp-svc.service \nwarp-cli set-families-mode off\nwarp-cli delete\nwarp-cli register\nwarp-cli disconnect\n\nwarp-cli connect\nwarp-cli status\nwarp-cli settings\n\nwarp-cli set-mode --help\nwarp-cli set-mode warp\nwarp-cli set-mode doh\nwarp-cli set-mode warp+doh\nwarp-cli set-mode proxy\nwarp-cli set-proxy-port 4040 # Set the listening port for WARP proxy (127.0.0.1:{port})\n\nwarp-cli -vvv -l connect\nwarp-cli -l status\nwarp-cli enable-dns-log\nwarp-cli -l enable-dns-log\njournalctl -xeu warp-svc.service\njournalctl -u systemd-resolved -f\nwarp-diag\n\nproxychains midori\n")),(0,a.kt)("h2",{id:"set-system-wide-dns"},"Set System-wide DNS"),(0,a.kt)("h3",{id:"shekan-dns"},"Shekan DNS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'# resolvectl query identitytoolkit.googleapis.com\nDNS_SERVER="178.22.122.100"\nsudo sh -c "echo nameserver $DNS_SERVER > /etc/resolv.conf"\nsudo sed -i \'/^\\s*#*DNS=/d\' /etc/systemd/resolved.conf && sudo sed -i \'$ a\\DNS=\'"$DNS_SERVER" /etc/systemd/resolved.conf\nsudo systemctl daemon-reload; wait;\nsudo systemctl restart systemd-networkd; wait;\nsudo systemctl restart systemd-resolved; wait;\nsudo systemd-resolve --flush-caches\nsudo resolvectl flush-caches\nsudo resolvectl dns eth0 "$DNS_SERVER"\nsudo resolvectl dns tun0 "$DNS_SERVER"\nsudo resolvectl dns enp3s0 "$DNS_SERVER"\nsudo resolvectl dns enp5s0 "$DNS_SERVER"\nsudo resolvectl dns docker0 "$DNS_SERVER"\nsudo resolvectl dns\n')),(0,a.kt)("h3",{id:"403-dns"},"403 DNS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'DNS_SERVER="10.202.10.102"\nsudo sh -c "echo nameserver $DNS_SERVER > /etc/resolv.conf"\nsudo sed -i \'/^\\s*#*DNS=/d\' /etc/systemd/resolved.conf && sudo sed -i \'$ a\\DNS=\'"$DNS_SERVER" /etc/systemd/resolved.conf\nsudo systemctl daemon-reload; wait;\nsudo systemctl restart systemd-networkd; wait;\nsudo systemctl restart systemd-resolved; wait;\nsudo systemd-resolve --flush-caches\nsudo resolvectl flush-caches\nsudo resolvectl dns eth0 "$DNS_SERVER"\nsudo resolvectl dns tun0 "$DNS_SERVER"\nsudo resolvectl dns enp3s0 "$DNS_SERVER"\nsudo resolvectl dns enp5s0 "$DNS_SERVER"\nsudo resolvectl dns docker0 "$DNS_SERVER"\nsudo resolvectl dns\n')),(0,a.kt)("h3",{id:"electrotm-dns"},"electrotm DNS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'DNS_SERVER="78.157.42.101"\nsudo sh -c "echo nameserver $DNS_SERVER > /etc/resolv.conf"\nsudo sed -i \'/^\\s*#*DNS=/d\' /etc/systemd/resolved.conf && sudo sed -i \'$ a\\DNS=\'"$DNS_SERVER" /etc/systemd/resolved.conf\nsudo systemctl daemon-reload; wait;\nsudo systemctl restart systemd-networkd; wait;\nsudo systemctl restart systemd-resolved; wait;\nsudo systemd-resolve --flush-caches\nsudo resolvectl flush-caches\nsudo resolvectl dns eth0 "$DNS_SERVER"\nsudo resolvectl dns tun0 "$DNS_SERVER"\nsudo resolvectl dns enp3s0 "$DNS_SERVER"\nsudo resolvectl dns enp5s0 "$DNS_SERVER"\nsudo resolvectl dns docker0 "$DNS_SERVER"\nsudo resolvectl dns\n')),(0,a.kt)("h3",{id:"opendns"},"OpenDns"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'DNS_SERVER="208.67.222.222"\nsudo sh -c "echo nameserver $DNS_SERVER > /etc/resolv.conf"\nsudo sed -i \'/^\\s*#*DNS=/d\' /etc/systemd/resolved.conf && sudo sed -i \'$ a\\DNS=\'"$DNS_SERVER" /etc/systemd/resolved.conf\nsudo systemctl daemon-reload; wait;\nsudo systemctl restart systemd-networkd; wait;\nsudo systemctl restart systemd-resolved; wait;\nsudo systemd-resolve --flush-caches\nsudo resolvectl flush-caches\nsudo resolvectl dns eth0 "$DNS_SERVER"\nsudo resolvectl dns tun0 "$DNS_SERVER"\nsudo resolvectl dns enp3s0 "$DNS_SERVER"\nsudo resolvectl dns enp5s0 "$DNS_SERVER"\nsudo resolvectl dns docker0 "$DNS_SERVER"\nsudo resolvectl dns\n')),(0,a.kt)("h3",{id:"global-dns"},"Global DNS"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'DNS_SERVER="1.1.1.1"\nsudo sh -c "echo nameserver $DNS_SERVER > /etc/resolv.conf"\nsudo sed -i \'/^\\s*#*DNS=/d\' /etc/systemd/resolved.conf && sudo sed -i \'$ a\\DNS=\'"$DNS_SERVER" /etc/systemd/resolved.conf\nsudo systemctl daemon-reload; wait;\nsudo systemctl restart systemd-networkd; wait;\nsudo systemctl restart systemd-resolved; wait;\nsudo systemd-resolve --flush-caches\nsudo resolvectl flush-caches\nsudo resolvectl dns eth0 "$DNS_SERVER"\nsudo resolvectl dns tun0 "$DNS_SERVER"\nsudo resolvectl dns enp3s0 "$DNS_SERVER"\nsudo resolvectl dns enp5s0 "$DNS_SERVER"\nsudo resolvectl dns docker0 "$DNS_SERVER"\nsudo resolvectl dns\n')),(0,a.kt)("h3",{id:"setting-domains-directly-in-etchosts"},"Setting domains directly in /etc/hosts"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/hosts\n\n10.202.10.4 securetoken.googleapis.com\n50.7.87.84  identitytoolkit.googleapis.com\n50.7.87.84  bard.google.com\n50.7.85.222 openai.com\n50.7.85.220 chat.openai.com\n50.7.87.85  cdn.openai.com\n188.68.52.244 www.bing.com\n50.7.87.85  marketplace.visualstudio.com\n50.7.85.222 auth0.openai.com\n50.7.85.218 api.codium.ai\n")),(0,a.kt)("h2",{id:"simple-python-httpserver"},"Simple python http.server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"python3 -m http.server --bind 0.0.0.0 --cgi 8000\n")))}c.isMDXComponent=!0}}]);