"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4251],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,y=m["".concat(o,".").concat(d)]||m[d]||p[d]||s;return n?a.createElement(y,i(i({ref:t},c),{},{components:n})):a.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<s;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6685:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const s={sidebar_position:4,tags:["Linux","Systemd"]},i="Systemd",l={unversionedId:"linux/systemd",id:"linux/systemd",title:"Systemd",description:"Systemd is a modern initialization and management system for Linux systems that replaces the traditional SysV init system. It provides more advanced features for managing system services and boot processes.",source:"@site/docs/linux/systemd.md",sourceDirName:"linux",slug:"/linux/systemd",permalink:"/Tutorials/linux/systemd",draft:!1,tags:[{label:"Linux",permalink:"/Tutorials/tags/linux"},{label:"Systemd",permalink:"/Tutorials/tags/systemd"}],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,tags:["Linux","Systemd"]},sidebar:"tutorialSidebar",previous:{title:"Backup",permalink:"/Tutorials/linux/backup"},next:{title:"Manjaro/Arch Linux",permalink:"/Tutorials/linux/manjaro"}},o={},u=[{value:"Unit files&#39; locations",id:"unit-files-locations",level:2},{value:"Analyzing",id:"analyzing",level:2},{value:"Reloading",id:"reloading",level:2},{value:"Run a script after suspending has finished (resume)",id:"run-a-script-after-suspending-has-finished-resume",level:2}],c={toc:u},m="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"systemd"},"Systemd"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Systemd")," is a modern initialization and management system for Linux systems that replaces the traditional SysV init system. It provides more advanced features for managing system services and boot processes."),(0,r.kt)("h2",{id:"unit-files-locations"},"Unit files' locations"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl show --property=UnitPath\n")),(0,r.kt)("h2",{id:"analyzing"},"Analyzing"),(0,r.kt)("p",null,"You can use various commands to analyze and manage services using systemd:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"systemd-analyze\nsystemd-analyze blame\n\nsystemctl --state=failed\n\nsudo systemctl list-unit-files --type=service --state=enabled --all\nsudo systemctl list-unit-files | grep enabled # List only enabled unit files\njournalctl -u example.service  # View the journal logs of a specific service\n")),(0,r.kt)("h2",{id:"reloading"},"Reloading"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl daemon-reload\n")),(0,r.kt)("h2",{id:"run-a-script-after-suspending-has-finished-resume"},"Run a script after suspending has finished (resume)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/system/gamma.service\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[Unit]\nDescription=Start Script in terminal\nAfter=suspend.target graphical.target\n\n[Service]\nUser=mlibre\nType=idle\nEnvironment=DISPLAY=:0\nExecStartPre=/bin/sleep 10\nExecStart=/bin/bash /usr/local/bin/gamma_on_startup\n\n[Install]\nWantedBy=suspend.target graphical.target\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload\nsudo systemctl enable gamma.service\nsystemctl status gamma\njournalctl -u gamma\n")))}p.isMDXComponent=!0}}]);