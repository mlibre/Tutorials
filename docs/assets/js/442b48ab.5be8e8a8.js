"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5510],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var s=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,s,a=function(e,n){if(null==e)return{};var t,s,a={},o=Object.keys(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=s.createContext({}),u=function(e){var n=s.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=u(e.components);return s.createElement(i.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},w=s.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=u(t),w=a,m=p["".concat(i,".").concat(w)]||p[w]||c[w]||o;return t?s.createElement(m,r(r({ref:n},d),{},{components:t})):s.createElement(m,r({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,r=new Array(o);r[0]=w;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[p]="string"==typeof e?e:a,r[1]=l;for(var u=2;u<o;u++)r[u]=t[u];return s.createElement.apply(null,r)}return s.createElement.apply(null,t)}w.displayName="MDXCreateElement"},888:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var s=t(7462),a=(t(7294),t(3905));const o={sidebar_position:3,tags:["Linux","VPN","openVPN"]},r="VPN",l={unversionedId:"network/vpn",id:"network/vpn",title:"VPN",description:"VPN over SSH",source:"@site/docs/network/vpn.md",sourceDirName:"network",slug:"/network/vpn",permalink:"/Wisdom-Hub/network/vpn",draft:!1,tags:[{label:"Linux",permalink:"/Wisdom-Hub/tags/linux"},{label:"VPN",permalink:"/Wisdom-Hub/tags/vpn"},{label:"openVPN",permalink:"/Wisdom-Hub/tags/open-vpn"}],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,tags:["Linux","VPN","openVPN"]},sidebar:"tutorialSidebar",previous:{title:"SSH",permalink:"/Wisdom-Hub/network/ssh"},next:{title:"DNS",permalink:"/Wisdom-Hub/network/dns"}},i={},u=[{value:"VPN over SSH",id:"vpn-over-ssh",level:2},{value:"openVPN Over Socks",id:"openvpn-over-socks",level:2},{value:"OpenVpn Server",id:"openvpn-server",level:2},{value:"V2Ray VPN/Proxy Server",id:"v2ray-vpnproxy-server",level:2},{value:"disable ping",id:"disable-ping",level:3},{value:"Change server hostname",id:"change-server-hostname",level:3},{value:"Add domain to the cloudflare",id:"add-domain-to-the-cloudflare",level:3},{value:"XUI Panel",id:"xui-panel",level:3},{value:"Nekoray",id:"nekoray",level:3},{value:"ShadowSocks Server",id:"shadowsocks-server",level:2},{value:"Server",id:"server",level:3},{value:"Client",id:"client",level:3},{value:"WireGuard VPN Server",id:"wireguard-vpn-server",level:2},{value:"Server Configuration",id:"server-configuration",level:3},{value:"Peer Configuration",id:"peer-configuration",level:3},{value:"Free VPNs",id:"free-vpns",level:2},{value:"VPNBook",id:"vpnbook",level:3},{value:"Protonvpn",id:"protonvpn",level:3},{value:"Install",id:"install",level:4},{value:"OpenVpn",id:"openvpn",level:4},{value:"WireGuard",id:"wireguard",level:4},{value:"Hide.me",id:"hideme",level:3},{value:"Windscribe",id:"windscribe",level:3},{value:"Warp",id:"warp",level:3}],d={toc:u},p="wrapper";function c(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,s.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"vpn"},"VPN"),(0,a.kt)("h2",{id:"vpn-over-ssh"},"VPN over SSH"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S sshuttle\n\nsudo sshuttle -v -r mlibre@51.89.88.80 0/0 -x 51.89.88.80 --disable-ipv6\n# sudo sshuttle -vvvv -r mlibre@51.89.88.80 0/0 -x 51.89.88.80 --dns --disable-ipv6\n# sudo sshuttle -vvvv -r mlibre@51.89.88.80 0.0.0.0/0 --dns --disable-ipv6\n")),(0,a.kt)("h2",{id:"openvpn-over-socks"},"openVPN Over Socks"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"SS server address: 87.80.80.80")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"nano mlibre.ovpn\nsocks-proxy 127.0.0.1 1090\nroute 87.80.80.80 255.255.255.255 net_gateway\nroute 192.168.0.0 255.255.0.0 net_gateway\n")),(0,a.kt)("h2",{id:"openvpn-server"},"OpenVpn Server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'https://github.com/mlibre/openvpn-install\ncurl -O https://raw.githubusercontent.com/angristan/openvpn-install/master/openvpn-install.sh\nchmod +x openvpn-install.sh\nsudo ./openvpn-install.sh\nport: random, tcp, curreny system resolver, compression yes\nscp -P 2138 mlibre@87.107.164.69:/home/mlibre/mlibre.ovpn .\n\nDNS_SERVER="1.1.1.1"\nsudo sh -c "echo nameserver $DNS_SERVER > /etc/resolv.conf"\nsudo sed -i \'/^\\s*#*DNS=/d\' /etc/systemd/resolved.conf && sudo sed -i \'$ a\\DNS=\'"$DNS_SERVER" /etc/systemd/resolved.conf\nsudo systemctl daemon-reload; wait;\nsudo systemctl restart systemd-networkd; wait;\nsudo systemctl restart systemd-resolved; wait;\nsudo systemd-resolve --flush-caches\nsudo resolvectl flush-caches\nsudo resolvectl dns eth0 "$DNS_SERVER"\nsudo resolvectl dns tun0 "$DNS_SERVER"\nsudo resolvectl dns enp3s0 "$DNS_SERVER"\nsudo resolvectl dns enp5s0 "$DNS_SERVER"\nsudo resolvectl dns docker0 "$DNS_SERVER"\nsudo resolvectl dns\nGlobal: 1.1.1.1\nLink 2 (enp3s0): 1.1.1.1\nLink 8 (tun0): 1.1.1.1\n\n\nAdd these lines to your .ovpn file:\n\nsocks-proxy 127.0.0.1 1080\nroute SHADOWSOCKS_SERVER_IP 255.255.255.255 net_gateway\n')),(0,a.kt)("h2",{id:"v2ray-vpnproxy-server"},"V2Ray VPN/Proxy Server"),(0,a.kt)("h3",{id:"disable-ping"},"disable ping"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/sysctl.conf\nnet.ipv4.conf.icmp_echo_ignore_all = 1\n\nsudo nano /etc/sysctl.d/sys.conf\nnet.ipv4.conf.icmp_echo_ignore_all = 1\n")),(0,a.kt)("h3",{id:"change-server-hostname"},"Change server hostname"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"vultr.com -> server setting -> ipv4 -> reverse DNS")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"  proxychains ssh -p port true@000.000.13.13\n\n  sudo nano /etc/cloud/cloud.cfg\n  # preserve_hostname: true\n  \n  sudo nano /etc/hostname\n  domain.ga\n\n  sudo nano /etc/hosts\n  127.0.1.1 domain.ga\n\n  sudo hostnamectl set-hostname domain.ga\n")),(0,a.kt)("h3",{id:"add-domain-to-the-cloudflare"},"Add domain to the cloudflare"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"SSL/TLS: Full"),(0,a.kt)("li",{parentName:"ul"},"Disable DNSSEC, Always Use HTTPS, Automatic HTTPS Rewrites"),(0,a.kt)("li",{parentName:"ul"},"Enable TLS 1.3, HTTP2/3, GRPC, WS and ... in Network/SSL tab"),(0,a.kt)("li",{parentName:"ul"},"Enable Development mode"),(0,a.kt)("li",{parentName:"ul"},'Add a "A" DNS record: domain.ga, DNS only ( no proxy )'),(0,a.kt)("li",{parentName:"ul"},'Add a "A" DNS record: v4p.domain.ga, proxy'),(0,a.kt)("li",{parentName:"ul"},'Add a "AAAA" DNS record: v6.domain.ga, proxy ( don\'t make dns-only for ipv6 )')),(0,a.kt)("h3",{id:"xui-panel"},"XUI Panel"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo su\ncd\napt purge snapd \napt update\napt dist-upgrade\napt install git\n\nsudo ufw allow 2053\nsudo ufw allow 2053/udp\nsudo ufw allow 2053/tcp\nsudo ufw allow 35400\nsudo ufw allow 35400/udp\nsudo ufw allow 35400/tcp\nsudo ufw allow 2087\nsudo ufw allow 2087/udp\nsudo ufw allow 2087/tcp\nsudo ufw allow 2096\nsudo ufw allow 2096/udp\nsudo ufw allow 2096/tcp\nsudo ufw allow 8443\nsudo ufw allow 8443/udp\nsudo ufw allow 8443/tcp\nsudo ufw allow 2053\nsudo ufw allow 2053/udp\nsudo ufw allow 2053/tcp\nsudo ufw allow 3678\nsudo ufw allow 3678/udp\nsudo ufw allow 3678/tcp\nsudo ufw allow 2289\nsudo ufw allow 2289/udp\nsudo ufw allow 2289/tcp\nsudo ufw allow 9090\nsudo ufw allow 9090/udp\nsudo ufw allow 9090/tcp\nsudo ufw allow 1080\nsudo ufw allow 1080/udp\nsudo ufw allow 1080/tcp\nsudo ufw allow 443\nsudo ufw allow 443/tcp\nsudo ufw allow 443/udp\nsudo ufw allow 80\nsudo ufw allow 80/tcp\nsudo ufw allow 80/udp\nsudo ufw allow 5353\nsudo ufw allow 5353/tcp\nsudo ufw allow 5353/udp\nsudo ufw allow 53\nsudo ufw allow 53/tcp\nsudo ufw allow 53/udp\nsudo ufw allow OpenSSH\nsudo ufw allow https\nsudo ufw allow ssh\nsudo ufw allow www\nsudo ufw allow bootps\nsudo ufw allow dns\n\n\ncd\nbash <(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)\n# cat /usr/local/x-ui/bin/config.json\n# tar -czvf x-ui.tgz /usr/local/x-ui/\n# proxychains scp -P 3612 true@199.247.13.13:x-ui.tgz .\n# proxychains scp -P 3612 root@199.247.13.13:cert.crt .\n# proxychains scp -P 3612 root@199.247.13.13:private.key .\n\n\nsudo su\nx-ui\n# Open ports, active firewall\n# install BBR\n# revoke certificate the root domain\n# issue certificate\n# Set Panel port 8443\n# Set the certs for panel\nls\nacme.sh --info\nacme.sh --list\n# lsof -i :80\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Open Panel (",(0,a.kt)("a",{parentName:"li",href:"https://domain.ga:8443/xui/inbounds"},"https://domain.ga:8443/xui/inbounds"),")"),(0,a.kt)("li",{parentName:"ul"},"trojan-tls-TCP-443-allow-insecure-alp-all-sni-stackoverflow.com"),(0,a.kt)("li",{parentName:"ul"},"vmess-ws-tls-2053-allow-insecure-aph-all"),(0,a.kt)("li",{parentName:"ul"},"vmess-h2-TLS-H2-HTTP1-allow-insecure-stackoverflow.com-80"),(0,a.kt)("li",{parentName:"ul"},"vmess-h2-TLS-H2-allow-insecure-8443"),(0,a.kt)("li",{parentName:"ul"},"vless-2096-h2-reality-no-sniff"),(0,a.kt)("li",{parentName:"ul"},"In firefox: Check Proxy DNS when using SOCKS v5")),(0,a.kt)("h3",{id:"nekoray"},"Nekoray"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Nekoray Supports SS, Vmess and ...."),(0,a.kt)("li",{parentName:"ul"},"Download from ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/Matsuridayo/nekoray/releases"},"https://github.com/Matsuridayo/nekoray/releases"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'aria2c -x 10 "https://github.com/MatsuriDayo/nekoray/releases/download/2.9/nekoray-2.9-2022-12-19-linux64.zip"\nunzip nekoray-2.9-2022-12-19-linux64.zip\ncd nekoray\n./nekoray\n# Settings -> security -> Skip TLS certificate\n# paste vmess setting. Address: portal.domain.ga, host: portal.domain.ga\n# paste vmess setting. Address: iv6.domain.ga, host: iv6.domain.ga\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Open Nekoray -> Routing Settings -> remote DNS: localhost")),(0,a.kt)("h2",{id:"shadowsocks-server"},"ShadowSocks Server"),(0,a.kt)("h3",{id:"server"},"Server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'sudo apt install shadowsocks-libev -y\nsudo nano /etc/shadowsocks-libev/config.json\n{\n    "server":["::1", "0.0.0.0"],\n    "mode":"tcp_and_udp",\n    "server_port":9090,\n    "password":"password",\n    "method":"chacha20-ietf-poly1305",\n    "timeout":1000,\n    "nameserver":"1.1.1.1",\n    "fast_open": true\n}\nsudo ufw allow 9090/udp\nsudo ufw allow 9090/tcp\nsudo ufw allow 1080/udp\nsudo ufw allow 1080/tcp\nsudo ufw allow 443\nsudo systemctl enable shadowsocks-libev.service\nsudo systemctl restart shadowsocks-libev.service\nsudo journalctl -f -u shadowsocks-libev.service\n\n# Custom instance\nsudo nano /etc/systemd/system/direct.service\n[Unit]\nDescription=Shadowsocks\nAfter=network.target\n\nStartLimitIntervalSec=30s\nStartLimitBurst=5\n\n[Service]\nType=simple\nUser=mlibre\nGroup=mlibre\nCapabilityBoundingSet=CAP_NET_BIND_SERVICE\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecStart=ss-server -c /etc/shadowsocks-libev/config.json\n\nRestart=always\nRestartSec=3s\n\n[Install]\nWantedBy=multi-user.target\n')),(0,a.kt)("h3",{id:"client"},"Client"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'sudo pamac install shadowsocks-rust-bin\nsudo nano /etc/shadowsocks/config.json \n{\n    "servers": [\n      {\n          "address": "51.89.88.80",\n          "port": 9090,\n          "password": "password",\n          "method":"chacha20-ietf-poly1305",\n          "timeout": 1000\n      }\n    ],\n    "mode":"tcp_and_udp",\n    "local_port":1080,\n    "local_address": "127.0.0.1",\n    "fast_open": true,\n    "dns": "1.1.1.1",\n    "remote_dns_address": "8.8.8.8"\n}\n\n# sudo systemctl disable shadowsocks-rust-local@config\n# sudo systemctl enable shadowsocks-rust-local@config\n# sudo systemctl restart shadowsocks-rust-local@config\n# sudo systemctl status shadowsocks-rust-local@config\n# journalctl -f -u shadowsocks-rust-local@config\n\n# sslocal -c /etc/shadowsocks/config.json -d\n# sslocal --config /etc/shadowsocks-rust/germany.json -v --outbound-bind-interface lo --tun-interface-name tun0\n\nsudo nano /lib/systemd/system/shadowsocks-rust-local@.service\n[Unit]\nDescription=Shadowsocks-rust Local Client Service for %I\nAfter=network.target\n\nStartLimitIntervalSec=30s\nStartLimitBurst=5\n\n[Service]\nType=simple\nDynamicUser=yes\nCapabilityBoundingSet=CAP_NET_BIND_SERVICE\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecStart=/usr/bin/sslocal --log-without-time -c /etc/shadowsocks/config.json\n\nRestart=always\nRestartSec=3s\n\n[Install]\nWantedBy=multi-user.target\n\n\n## Firefox\nsocks host: 127.0.0.1\nsocks port: 1080\nenable dns over proxy\n\nsudo resolvectl dns enp3s0 1.1.1.1\necho "nameserver 8.8.8.8" > /etc/resolv.conf\n')),(0,a.kt)("h2",{id:"wireguard-vpn-server"},"WireGuard VPN Server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -Syyuu wireguard extra/wireguard-tools resolvconf\nsudo apt update\napt-get purge nftables\nsudo apt dist-upgrade\nsudo apt install htop sudo wireguard wireguard-tools resolvconf iptables\nupdate-alternatives --set iptables /usr/sbin/iptables-legacy\n")),(0,a.kt)("h3",{id:"server-configuration"},"Server Configuration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"https://github.com/angristan/wireguard-install\ncurl -O https://raw.githubusercontent.com/angristan/wireguard-install/master/wireguard-install.sh\nchmod +x wireguard-install.sh\nsudo ./wireguard-install.sh\n")),(0,a.kt)("h3",{id:"peer-configuration"},"Peer Configuration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"resolvectl dns\nsudo resolvectl dns enp3s0 10.8.0.1\n# sudo resolvectl dns enp3s0 208.67.222.222\n\n\n# ON THE CLIENT\nsudo wg-quick up wg0\nsudo wg-quick down wg0\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ip route list default\n# Copy Device Name: eth0\nip -brief address show eth0\n# Copy The server public ip\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# https://github.com/mlibre/wireguard-install\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl stop wg-quick@wg0.service\nsudo systemctl disable wg-quick@wg0.service\nsudo systemctl enable wg-quick@wg0.service\nsudo systemctl start wg-quick@wg0.service\nsudo systemctl status wg-quick@wg0.service\nsudo wg\n# sudo wg-quick down wg0\n# sudo systemctl daemon-reload \n")),(0,a.kt)("h2",{id:"free-vpns"},"Free VPNs"),(0,a.kt)("h3",{id:"vpnbook"},"VPNBook"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Download OpenVpn file: ",(0,a.kt)("a",{parentName:"li",href:"https://www.vpnbook.com/freevpn"},"https://www.vpnbook.com/freevpn")),(0,a.kt)("li",{parentName:"ul"},"Import in NetworkManger"),(0,a.kt)("li",{parentName:"ul"},"Enter username and password from here: ",(0,a.kt)("a",{parentName:"li",href:"https://www.vpnbook.com/freevpn"},"https://www.vpnbook.com/freevpn"))),(0,a.kt)("h3",{id:"protonvpn"},"Protonvpn"),(0,a.kt)("h4",{id:"install"},"Install"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'sudo systemctl stop firewalld.service\nyay --noprovides --answerdiff None --answerclean None --mflags "--noconfirm"  -S protonvpn\n# proxychains yay --noprovides --answerdiff None --answerclean None --mflags "--noconfirm"  -S protonvpn\nprotonvpn\n# proxychain protonvpn\n')),(0,a.kt)("h4",{id:"openvpn"},"OpenVpn"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Download openVpn config file form here: ",(0,a.kt)("a",{parentName:"li",href:"https://account.protonvpn.com/downloads"},"https://account.protonvpn.com/downloads")),(0,a.kt)("li",{parentName:"ul"},"Copy openVPn credentials: ",(0,a.kt)("a",{parentName:"li",href:"https://account.protonvpn.com/account"},"https://account.protonvpn.com/account")),(0,a.kt)("li",{parentName:"ul"},"Network Manager: New -> Import OpenVpn Saved Configuration. Paste credentials")),(0,a.kt)("h4",{id:"wireguard"},"WireGuard"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -R firewalld\nsudo ufw disable\nsudo nano /etc/sysctl.conf\n# add: net.ipv4.ip_forward=1\n# net.ipv6.conf.all.forwarding=1\nsudo sysctl -p\nsudo pacman -S extra/wireguard-tools\n# yay -S  qomui\n# https://account.protonvpn.com/downloads#wireguard-configuration\nsudo nano /etc/wireguard/wg0.conf\n# past\n\nresolvectl dns\nsudo resolvectl dns enp3s0 10.2.0.1 # ip addr:(enp3s0). resolvectl dnsglobal:(10.2.0.1). can be added in POSTup wirgurd conf\nsudo wg-quick up wg0\nsudo wg-quick down wg0\nsudo wg\n")),(0,a.kt)("h3",{id:"hideme"},"Hide.me"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl stop firewalld.service\ncurl -L https://hide.me/download/linux-amd64 | tar -xJ && sudo ./install.sh\n# Extend free trail \n# https://member.hide.me/en/\nproxychains sudo ./hide.me token free-unlimited.hideservers.net\nproxychains sudo ./hide.me connect free-unlimited.hideservers.net\n")),(0,a.kt)("h3",{id:"windscribe"},"Windscribe"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl stop firewalld.service\nyay -S aur/windscribe-bin\n# proxychains yay -S aur/windscribe-bin\n")),(0,a.kt)("h3",{id:"warp"},"Warp"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pamac insatll cloudflare-warp-bin\n\nsudo nano /etc/systemd/resolved.conf\nResolveUnicastSingleLabel=yes\nsudo systemctl restart systemd-resolved.service\n\nsudo systemctl restart warp-svc.service \nsudo systemctl enable warp-svc.service \nwarp-cli set-families-mode off\nwarp-cli delete\nwarp-cli register\nwarp-cli disconnect\n\nwarp-cli connect\nwarp-cli status\nwarp-cli settings\n\nwarp-cli set-mode --help\nwarp-cli set-mode warp\nwarp-cli set-mode doh\nwarp-cli set-mode warp+doh\nwarp-cli set-mode proxy\nwarp-cli set-proxy-port 4040 # Set the listening port for WARP proxy (127.0.0.1:{port})\n\nwarp-cli -vvv -l connect\nwarp-cli -l status\nwarp-cli enable-dns-log\nwarp-cli -l enable-dns-log\njournalctl -xeu warp-svc.service\njournalctl -u systemd-resolved -f\nwarp-diag\n\nproxychains midori\n")))}c.isMDXComponent=!0}}]);