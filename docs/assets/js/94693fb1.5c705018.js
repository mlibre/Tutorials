"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6947],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(t),g=o,m=p["".concat(u,".").concat(g)]||p[g]||d[g]||a;return t?r.createElement(m,i(i({ref:n},c),{},{components:t})):r.createElement(m,i({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=g;var s={};for(var u in n)hasOwnProperty.call(n,u)&&(s[u]=n[u]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},7421:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=t(7462),o=(t(7294),t(3905));const a={sidebar_position:6,tags:["Docusaurus"]},i="Docusaurus",s={unversionedId:"docusaurus",id:"docusaurus",title:"Docusaurus",description:"Docusaurus is a static-site generator. It builds a single-page application with fast client-side navigation.",source:"@site/docs/docusaurus.md",sourceDirName:".",slug:"/docusaurus",permalink:"/Tutorials/docusaurus",draft:!1,tags:[{label:"Docusaurus",permalink:"/Tutorials/tags/docusaurus"}],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,tags:["Docusaurus"]},sidebar:"tutorialSidebar",previous:{title:"Vscode",permalink:"/Tutorials/vscode"},next:{title:"Raspberry pi",permalink:"/Tutorials/raspberry pi"}},u={},l=[{value:"Install",id:"install",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Run",id:"run",level:2},{value:"Github Actions",id:"github-actions",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Resources",id:"resources",level:2}],c={toc:l},p="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"docusaurus"},"Docusaurus"),(0,o.kt)("p",null,"Docusaurus is a static-site generator. It builds a single-page application with fast client-side navigation.",(0,o.kt)("br",{parentName:"p"}),"\n","It provides out-of-the-box documentation features but can be used to create any kind of site."),(0,o.kt)("p",null,"\u26a1\ufe0f Docusaurus will help you ship a beautiful documentation site in no time",(0,o.kt)("br",{parentName:"p"}),"\n","\ud83d\udcb8 Building a custom tech stack is expensive. Instead, focus on your content and just write Markdown files",(0,o.kt)("br",{parentName:"p"}),"\n","\ud83d\udca5 Use advanced features like versioning, i18n, search and theme customizations"),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nano .gitignore\nnode_modules\n\nnpx create-docusaurus@latest docusaurus classic\ncd website\n\n# npx create-docusaurus@latest --help\n")),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'nano package.json\n"mybuild": "rm -r .docusaurus/; rm -r docs/; rm -rf ../docs; cp -r ../Tutorials docs/; docusaurus build; cp -r build ../docs"\n\nnano docusaurus.config.js\n# Visit https://github.com/mlibre/Tutorials/blob/master/website/docusaurus.config.js\n')),(0,o.kt)("h2",{id:"run"},"Run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# Starts the development server.\nnpm start\n\n# Bundles your website into static files for production into the "build" folder\nnpm run build\n\n# Build  website for github pages\nnpm run mybuild\n\n# Serves the built website locally\nnpm run serve\n\n# Publishes the website to GitHub pages\nnpm deploy\n')),(0,o.kt)("h2",{id:"github-actions"},"Github Actions"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p .github/workflows\nnano .github/workflows/npm.yml\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yml"},'name: Generate Docs Folder\n\non:\n  push:\n    branches: [\'master\']\n\njobs:\n  build:\n    name: Make Website\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n        with:\n          node-version: 20.x\n      \n      - name: Build docs\n        working-directory: ./docusaurus\n        run: npm install; npm run mybuild\n\n      - name: Commit and push changes\n        run: |\n          git config --global user.name "mlibre"\n          git config --global user.email "m.gh@linuxmail.org"\n          git config --global core.autocrlf input\n          git config --global core.fileMode false\n          git config core.autocrlf input\n          git config core.fileMode false\n          git add .\n          git commit -m "Build docs"\n          git push\n')),(0,o.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("p",null,"Refresh the git repo, if anything is wrong with it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'git config --global user.name "mlibre"\ngit config --global user.email "m.gh@linuxmail.org"\ngit config --global core.autocrlf input\ngit config --global core.fileMode false\ngit config core.autocrlf input\ngit config core.fileMode false\ngit add --renormalize .\ngit commit -m "Build docs"\ngit push\n')),(0,o.kt)("h2",{id:"resources"},"Resources"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Website: ",(0,o.kt)("a",{parentName:"li",href:"https://docusaurus.io/docs"},"https://docusaurus.io/docs"))))}d.isMDXComponent=!0}}]);