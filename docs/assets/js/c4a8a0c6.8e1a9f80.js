"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4251],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>y});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),d=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=d(n),u=r,y=c["".concat(o,".").concat(u)]||c[u]||p[u]||s;return n?a.createElement(y,i(i({ref:t},m),{},{components:n})):a.createElement(y,i({ref:t},m))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var d=2;d<s;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8916:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const s={sidebar_position:3,tags:["Linux","Systemd","startup","service"]},i="Systemd",l={unversionedId:"linux/systemd",id:"linux/systemd",title:"Systemd",description:"Systemd is a modern initialization and management system for Linux systems that replaces the traditional SysV init system. It provides more advanced features for managing system services and boot processes.",source:"@site/docs/linux/systemd.md",sourceDirName:"linux",slug:"/linux/systemd",permalink:"/Wisdom-Hub/linux/systemd",draft:!1,tags:[{label:"Linux",permalink:"/Wisdom-Hub/tags/linux"},{label:"Systemd",permalink:"/Wisdom-Hub/tags/systemd"},{label:"startup",permalink:"/Wisdom-Hub/tags/startup"},{label:"service",permalink:"/Wisdom-Hub/tags/service"}],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,tags:["Linux","Systemd","startup","service"]},sidebar:"tutorialSidebar",previous:{title:"Disk",permalink:"/Wisdom-Hub/linux/disk-file"},next:{title:"Log",permalink:"/Wisdom-Hub/linux/log-monitoring"}},o={},d=[{value:"Targets",id:"targets",level:2},{value:"Isolate",id:"isolate",level:2},{value:"Add a system service",id:"add-a-system-service",level:2},{value:"Add a user service",id:"add-a-user-service",level:2},{value:"Run a script after suspending has finished (resume)",id:"run-a-script-after-suspending-has-finished-resume",level:2}],m={toc:d},c="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"systemd"},"Systemd"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Systemd")," is a modern initialization and management system for Linux systems that replaces the traditional SysV init system. It provides more advanced features for managing system services and boot processes."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Commands"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemctl show --property=UnitPath")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Display paths of unit files")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemctl show --property=UnitPath --user --no-pager")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Display user-specific paths of unit files")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemctl list-units --type=target")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Systemd Targets")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemctl list-unit-files --type target --all")),(0,r.kt)("td",{parentName:"tr",align:"center"},"all target units, regardless of state")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"sudo systemctl list-unit-files --type=service --state=enabled --all")),(0,r.kt)("td",{parentName:"tr",align:"center"},"List all enabled service units")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"sudo systemctl list-unit-files ","|"," grep enabled"),(0,r.kt)("td",{parentName:"tr",align:"center"},"List enabled units using grep")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemctl get-default")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Get system the default target")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemctl get-default --user")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Get user default target")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemctl cat graphical.target")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Show content of graphical.target unit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemctl status default.target --user")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Show status of user default.target unit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemd-analyze")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Measure system startup time")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemd-analyze blame")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Identify startup delay")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemctl --state=failed")),(0,r.kt)("td",{parentName:"tr",align:"center"},"List failed units")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemctl --state=active --type=target")),(0,r.kt)("td",{parentName:"tr",align:"center"},"List active targets")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemctl is-system-running")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Overall status of the system")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemctl daemon-reload")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Reload systemd configuration and units")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"journalctl -u example.service")),(0,r.kt)("td",{parentName:"tr",align:"center"},"View logs for a specific unit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"sudo systemctl edit --full service")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Edit the specified service unit file")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"sudo systemctl edit --force --full service")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Create new unit if not exists")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemd-analyze verify service")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Verify the syntax of service units")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"sudo systemctl isolate rescue.target")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Change system state to rescue target")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemctl soft-reboot")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Reboot the system without touching the kernel")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"systemctl status PID")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Show the status of a specific process")))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"list-units")," shows only loaded units by systemd, while ",(0,r.kt)("inlineCode",{parentName:"p"},"list-unit-files")," displays all available unit files, loaded or not")),(0,r.kt)("h1",{id:"how-system-boots"},"How system boots"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"When the system boots up, the firmware (BIOS or UEFI) initializes the hardware and starts the bootloader (like GRUB 2)"),(0,r.kt)("li",{parentName:"ol"},"The bootloader then loads both the Linux kernel and an initial RAM-based filesystem (",(0,r.kt)("inlineCode",{parentName:"li"},"initramfs"),") into memory"),(0,r.kt)("li",{parentName:"ol"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"initramfs")," contains a small executable called ",(0,r.kt)("inlineCode",{parentName:"li"},"init")),(0,r.kt)("li",{parentName:"ol"},"This ",(0,r.kt)("inlineCode",{parentName:"li"},"init")," executable is actually a version of ",(0,r.kt)("strong",{parentName:"li"},"systemd"),", which performs necessary actions such as loading appropriate filesystem drivers, handling device events with udev, ..."),(0,r.kt)("li",{parentName:"ol"},"Once the real root filesystem is found, checked, and mounted, a second instance of ",(0,r.kt)("strong",{parentName:"li"},"systemd")," takes over as the main system and service manager, and this instance is what gets the ",(0,r.kt)("strong",{parentName:"li"},"PID 1")),(0,r.kt)("li",{parentName:"ol"},"This systemd instance starts other system services like ",(0,r.kt)("inlineCode",{parentName:"li"},"systemd-journald")," and a user manager instance for each logged-in user. These user manager instances are started as ",(0,r.kt)("inlineCode",{parentName:"li"},"user@UID.service"),", where UID is the numerical user ID of the logged-in user. These instances use the same executable as the system manager, but start a different set of units specific to each user"),(0,r.kt)("li",{parentName:"ol"},"Each ",(0,r.kt)("inlineCode",{parentName:"li"},"systemd --user")," instance manages a hierarchy of units specific to that user.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The process of starting a user manager instance in systemd is handled through the ",(0,r.kt)("inlineCode",{parentName:"p"},"pam_systemd")," module. This module is responsible for registering user sessions with the systemd login manager, ",(0,r.kt)("inlineCode",{parentName:"p"},"systemd-logind.service"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Firmware initializes hardware and loads bootloader\nfirmware -> bootloader (GRUB)\n\n# Bootloader loads kernel and initramfs into memory\nbootloader -> kernel, initramfs\n\n# initramfs runs init (systemd)\ninitramfs -> init (systemd)\n\n# init prepares and mounts the real root filesystem\ninit -> mount root filesystem\n\n# init executes the main systemd instance on the root filesystem\ninit -> systemd\n\n# systemd starts system services and user sessions\nsystemd -> services, user sessions\n\n# Each user session may run a systemd --user instance\nuser session -> systemd --user\n")),(0,r.kt)("h2",{id:"targets"},"Targets"),(0,r.kt)("p",null,"Systemd targets are units in the systemd initialization system that represent specific system states or operational modes. They are used to group and manage other units, such as services, that are relevant to a particular mode of operation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl cat graphical.target\n")),(0,r.kt)("h2",{id:"isolate"},"Isolate"),(0,r.kt)("p",null,"Start the ",(0,r.kt)("strong",{parentName:"p"},"unit")," specified on the command line and its dependencies and stop all others, unless they have ",(0,r.kt)("inlineCode",{parentName:"p"},"IgnoreOnIsolate=yes")),(0,r.kt)("h2",{id:"add-a-system-service"},"Add a system service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/system/sshtunnel.service\n\n[Unit]\nDescription=SSH Tunnel\nAfter=network.target\n\n[Service]\nUser=mlibre\nRestart=always\nRestartSec=20\nExecStart=ssh -L 0.0.0.0:1234:localhost:3128 -N pachan@43.204.151.127 -p 8756\n\n[Install]\nWantedBy=graphical.target\n\nsudo systemctl daemon-reload\nsudo systemctl enable sshtunnel\nsudo systemctl reenable sshtunnel.service\nsudo systemctl restart sshtunnel\nsudo systemctl status sshtunnel\nsudo journalctl -f -u sshtunnel\n")),(0,r.kt)("h2",{id:"add-a-user-service"},"Add a user service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'nano ~/.config/systemd/user/my-service.service\n\n[Unit]\nDescription=My User Service\n\n[Service]\nExecStart=echo "hi everyone, hope good things happen for all"\n\n[Install]\nWantedBy=default.target\n\n\nsystemctl --user daemon-reload\nsystemctl --user enable my-service\nsystemctl --user reenable my-service.service\nsystemctl --user restart my-service\nsystemctl --user status my-service\njournalctl --user -f -u my-service\n')),(0,r.kt)("h2",{id:"run-a-script-after-suspending-has-finished-resume"},"Run a script after suspending has finished (resume)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/system/gamma.service\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"[Unit]\nDescription=Start Script in terminal\nAfter=suspend.target graphical.target\n\n[Service]\nUser=mlibre\nType=idle\nEnvironment=DISPLAY=:0\nExecStartPre=/bin/sleep 10\nExecStart=/bin/bash /usr/local/bin/gamma_on_startup\n\n[Install]\nWantedBy=suspend.target graphical.target\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload\nsudo systemctl enable gamma.service\nsystemctl status gamma\njournalctl -u gamma\n")))}p.isMDXComponent=!0}}]);