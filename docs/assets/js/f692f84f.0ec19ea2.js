"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[281],{3905:(e,a,t)=>{t.d(a,{Zo:()=>u,kt:()=>k});var n=t(7294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var o=n.createContext({}),p=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},u=function(e){var a=p(e.components);return n.createElement(o.Provider,{value:a},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(t),c=l,k=m["".concat(o,".").concat(c)]||m[c]||d[c]||r;return t?n.createElement(k,s(s({ref:a},u),{},{components:t})):n.createElement(k,s({ref:a},u))}));function k(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var r=t.length,s=new Array(r);s[0]=c;var i={};for(var o in a)hasOwnProperty.call(a,o)&&(i[o]=a[o]);i.originalType=e,i[m]="string"==typeof e?e:l,s[1]=i;for(var p=2;p<r;p++)s[p]=t[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4271:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var n=t(7462),l=(t(7294),t(3905));const r={sidebar_position:2,tags:["linux","Cheat","Sheet"]},s="Linux",i={unversionedId:"linux",id:"linux",title:"Linux",description:"Linux Cheat Sheet is a collection of useful commands and shortcuts for Linux.",source:"@site/docs/linux.md",sourceDirName:".",slug:"/linux",permalink:"/Tutorials/linux",draft:!1,tags:[{label:"linux",permalink:"/Tutorials/tags/linux"},{label:"Cheat",permalink:"/Tutorials/tags/cheat"},{label:"Sheet",permalink:"/Tutorials/tags/sheet"}],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,tags:["linux","Cheat","Sheet"]},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/Tutorials/"},next:{title:"Network",permalink:"/Tutorials/network"}},o={},p=[{value:"Tips and Tricks",id:"tips-and-tricks",level:2},{value:"Automatic Shutdown",id:"automatic-shutdown",level:3},{value:"Bash case-insensitive auto completion",id:"bash-case-insensitive-auto-completion",level:3},{value:"Changing monitor or screen Brightness and Gamma",id:"changing-monitor-or-screen-brightness-and-gamma",level:3},{value:"Resetting sound, audio",id:"resetting-sound-audio",level:3},{value:"Fixing broken grub",id:"fixing-broken-grub",level:3},{value:"EZ method",id:"ez-method",level:4},{value:"Second method",id:"second-method",level:4},{value:"Check boot errors, logs",id:"check-boot-errors-logs",level:3},{value:"Using proxies",id:"using-proxies",level:3},{value:"proxychains config",id:"proxychains-config",level:4},{value:"Resetting KDE",id:"resetting-kde",level:3},{value:"Click on the screen",id:"click-on-the-screen",level:3},{value:"Instant cloud file share",id:"instant-cloud-file-share",level:3},{value:"Backup",id:"backup",level:2},{value:"Rsync",id:"rsync",level:3},{value:"Partical Backup using locate",id:"partical-backup-using-locate",level:3},{value:"Performance",id:"performance",level:2},{value:"Disable Linux Watchdogs, compaction and more",id:"disable-linux-watchdogs-compaction-and-more",level:3},{value:"Improve fstab, ssd, nvme performance",id:"improve-fstab-ssd-nvme-performance",level:3},{value:"Disabling journaling",id:"disabling-journaling",level:3},{value:"Journal Size",id:"journal-size",level:3},{value:"XDG",id:"xdg",level:2},{value:"Make a startup script using XDG startup",id:"make-a-startup-script-using-xdg-startup",level:3},{value:"Systemd",id:"systemd",level:2},{value:"Unit files&#39; locations",id:"unit-files-locations",level:3},{value:"Analyzing",id:"analyzing",level:3},{value:"Reloading",id:"reloading",level:3},{value:"Run a script after suspending has finished (resume)",id:"run-a-script-after-suspending-has-finished-resume",level:3},{value:"Autostarts and Startup scripts and programs locations",id:"autostarts-and-startup-scripts-and-programs-locations",level:2},{value:"Font",id:"font",level:2},{value:"Locations",id:"locations",level:3},{value:"List",id:"list",level:3},{value:"Fira Code",id:"fira-code",level:3},{value:"Cache",id:"cache",level:3},{value:"Vulkan",id:"vulkan",level:2},{value:"Steam Games",id:"steam-games",level:2},{value:"Link NTFS game folder",id:"link-ntfs-game-folder",level:3},{value:"Run using proxy",id:"run-using-proxy",level:3},{value:"Disable desktop effects",id:"disable-desktop-effects",level:3},{value:"lutris",id:"lutris",level:2},{value:"Installation",id:"installation",level:3},{value:"With Proxy",id:"with-proxy",level:3},{value:"Proxy per game",id:"proxy-per-game",level:3},{value:"Unexpected error",id:"unexpected-error",level:3},{value:"Install Genymotoin Android emulator",id:"install-genymotoin-android-emulator",level:2},{value:"Windows 11",id:"windows-11",level:2},{value:"Make boatable usb",id:"make-boatable-usb",level:3},{value:"WoeUsb",id:"woeusb",level:4},{value:"Win2USB",id:"win2usb",level:4},{value:"Things to do after installing Windows 11",id:"things-to-do-after-installing-windows-11",level:4},{value:"Manjaro/Arch Linux",id:"manjaroarch-linux",level:2},{value:"Things to do before installing",id:"things-to-do-before-installing",level:3},{value:"Things to do after installing",id:"things-to-do-after-installing",level:3},{value:"AMDGPU",id:"amdgpu",level:3},{value:"TearFree, EnablePageFlip, DRI3",id:"tearfree-enablepageflip-dri3",level:4},{value:"Reducing DRI latency",id:"reducing-dri-latency",level:4},{value:"check xorg config file",id:"check-xorg-config-file",level:4},{value:"Blocking radon",id:"blocking-radon",level:4},{value:"Install AMDGPU-PRO",id:"install-amdgpu-pro",level:4},{value:"Uninstall AMDGPU-PRO",id:"uninstall-amdgpu-pro",level:4},{value:"Blacklist Radeon",id:"blacklist-radeon",level:3},{value:"Install Wine",id:"install-wine",level:3},{value:"Install a new os on the phone",id:"install-a-new-os-on-the-phone",level:2},{value:"Backup data",id:"backup-data",level:3},{value:"Restore",id:"restore",level:3},{value:"Enable Developer options",id:"enable-developer-options",level:3},{value:"Install odin tools for Samsung &gt;= 3.14",id:"install-odin-tools-for-samsung--314",level:3},{value:"Install samsung driver",id:"install-samsung-driver",level:3},{value:"Install adb",id:"install-adb",level:3},{value:"Download TWRP",id:"download-twrp",level:3},{value:"convert it to .md5",id:"convert-it-to-md5",level:4},{value:"Run Odin as administrator",id:"run-odin-as-administrator",level:3},{value:"Install bluestack",id:"install-bluestack",level:3},{value:"Youtube-dl",id:"youtube-dl",level:3},{value:"Add Alias",id:"add-alias",level:3}],u={toc:p},m="wrapper";function d(e){let{components:a,...t}=e;return(0,l.kt)(m,(0,n.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"linux"},"Linux"),(0,l.kt)("p",null,"Linux Cheat Sheet is a collection of useful commands and shortcuts for Linux.",(0,l.kt)("br",{parentName:"p"}),"\n","And a comprehensive guide to various aspects of Linux operating system"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#tips-and-tricks"},"Tips and Tricks"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#automatic-shutdown"},"Automatic Shutdown")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#bash-case-insensitive-auto-completion"},"Bash case-insensitive auto completion")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#changing-monitor-or-screen-brightness-and-gamma"},"Changing monitor or screen Brightness and Gamma")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#resetting-sound-audio"},"Resetting sound, audio")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#fixing-broken-grub"},"Fixing broken grub"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#ez-method"},"EZ method")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#second-method"},"Second method")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#check-boot-errors-logs"},"Check boot errors, logs")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#using-proxies"},"Using proxies"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#proxychains-config"},"proxychains config")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#resetting-kde"},"Resetting KDE")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#click-on-the-screen"},"Click on the screen")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#instant-cloud-file-share"},"Instant cloud file share")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#backup"},"Backup"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#rsync"},"Rsync")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#partical-backup-using-locate"},"Partical Backup using locate")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#performance"},"Performance"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#disable-linux-watchdogs-compaction-and-more"},"Disable Linux Watchdogs, compaction and more")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#improve-fstab-ssd-nvme-performance"},"Improve fstab, ssd, nvme performance")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#disabling-journaling"},"Disabling journaling")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#journal-size"},"Journal Size")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#xdg"},"XDG"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#make-a-startup-script-using-xdg-startup"},"Make a startup script using XDG startup")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#systemd"},"Systemd"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#unit-files-locations"},"Unit files' locations")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#analyzing"},"Analyzing")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#reloading"},"Reloading")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#run-a-script-after-suspending-has-finished-resume"},"Run a script after suspending has finished (resume)")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#autostarts-and-startup-scripts-and-programs-locations"},"Autostarts and Startup scripts and programs locations")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#font"},"Font"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#locations"},"Locations")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#list"},"List")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#fira-code"},"Fira Code")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#cache"},"Cache")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#vulkan"},"Vulkan")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#dota-2"},"Dota 2"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#dota-2-options"},"Dota 2 Options")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#link-ntfs-game-folder"},"Link NTFS game folder")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#run-using-proxy"},"Run using proxy")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#disable-desktop-effects"},"Disable desktop effects")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#lutris"},"lutris"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#installation"},"Installation")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#with-proxy"},"With Proxy")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#proxy-per-game"},"Proxy per game")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#unexpected-error"},"Unexpected error")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#install-genymotoin-android-emulator"},"Install Genymotoin Android emulator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#windows-11"},"Windows 11"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#make-boatable-usb"},"Make boatable usb"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#woeusb"},"WoeUsb")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#win2usb"},"Win2USB")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#things-to-do-after-installing-windows-11"},"Things to do after installing Windows 11")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#manjaroarch-linux"},"Manjaro/Arch Linux"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#things-to-do-before-installing"},"Things to do before installing")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#things-to-do-after-installing"},"Things to do after installing")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#amdgpu"},"AMDGPU"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#tearfree-enablepageflip-dri3"},"TearFree, EnablePageFlip, DRI3")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#reducing-dri-latency"},"Reducing DRI latency")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#check-xorg-config-file"},"check xorg config file")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#blocking-radon"},"Blocking radon")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#install-amdgpu-pro"},"Install AMDGPU-PRO")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#uninstall-amdgpu-pro"},"Uninstall AMDGPU-PRO")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#blacklist-radeon"},"Blacklist Radeon")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#install-wine"},"Install Wine")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#install-a-new-os-on-the-phone"},"Install a new os on the phone"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#backup-data"},"Backup data")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#restore"},"Restore")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#enable-developer-options"},"Enable Developer options")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#install-odin-tools-for-samsung--314"},"Install odin tools for Samsung ",">","= 3.14")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#install-samsung-driver"},"Install samsung driver")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#install-adb"},"Install adb")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#download-twrp"},"Download TWRP"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#convert-it-to-md5"},"convert it to .md5")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#run-odin-as-administrator"},"Run Odin as administrator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#install-bluestack"},"Install bluestack")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#youtube-dl"},"Youtube-dl")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#network"},"Network")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#raspberry-pi"},"Raspberry pi"))),(0,l.kt)("h2",{id:"tips-and-tricks"},"Tips and Tricks"),(0,l.kt)("h3",{id:"automatic-shutdown"},"Automatic Shutdown"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Schedule a shutdown for 220 minutes (3 hours and 30 minutes) in the future\nsudo shutdown -P +220\n\n# Shutdown the system immediately\nsudo shutdown -h now\n")),(0,l.kt)("h3",{id:"bash-case-insensitive-auto-completion"},"Bash case-insensitive auto completion"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Add the following line to the /etc/inputrc file to enable case-insensitive auto completion\necho 'set completion-ignore-case On' | sudo tee -a /etc/inputrc\n\n# or as root\necho 'set completion-ignore-case On' >> /etc/inputrc \n\n# or for current user only\necho \"set completion-ignore-case on\" >> ~/.inputrc\n")),(0,l.kt)("h3",{id:"changing-monitor-or-screen-brightness-and-gamma"},"Changing monitor or screen Brightness and Gamma"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# List available outputs\nxrandr\n\n# Change the brightness and gamma of the HDMI-A-0 output\nxrandr --output HDMI-A-0 --brightness 0.70 --gamma 0.70:0.70:0.70 \n")),(0,l.kt)("h3",{id:"resetting-sound-audio"},"Resetting sound, audio"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"pulseaudio --kill\npulseaudio --start\n")),(0,l.kt)("h3",{id:"fixing-broken-grub"},"Fixing broken grub"),(0,l.kt)("h4",{id:"ez-method"},"EZ method"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Boot a live Manjaro image")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo manjaro-chroot -a\ngrub-install\nupdate-grub\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"It will detect your current installed linux.  Restart the computer and it will boot the installed linux.",(0,l.kt)("br",{parentName:"p"}),"\n","Then run:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"update-grub\n")),(0,l.kt)("h4",{id:"second-method"},"Second method"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Mount the file system and efi partition\nsudo mount /dev/nvme0n1p4 /mnt\nsudo mount --bind /dev /mnt/dev\nsudo mount --bind /dev/pts /mnt/dev/pts\nsudo mount --bind /proc /mnt/proc\nsudo mount --bind /sys /mnt/sys\nsudo mkdir /efi\nsudo mount /dev/nvme0n1p1 /efi\n\n# Install grub and update grub configuration\nsudo grub-install --root-directory=/mnt/ /dev/nvme0 --efi-directory=/efi --target=x86_64-efi --recheck\nsudo chroot /mnt\nsudo blkid -s UUID -o value /dev/nvme0n1p1\nnano /etc/fstab\nsudo update-grub\n")),(0,l.kt)("h3",{id:"check-boot-errors-logs"},"Check boot errors, logs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo dmesg --level=emerg,alert,crit,err\n# Open KsystemLog\n")),(0,l.kt)("h3",{id:"using-proxies"},"Using proxies"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# Use proxychains to run yay, git, npm and pacman\nproxychains yay --noprovides --answerdiff None --answerclean None --mflags "--noconfirm"  -S protonvpn\nproxychains git clone https://github.com/boypt/vmess2json.git\nsudo proxychains npm -g install v2ray-tools\nsudo proxychains pacman -Syyuu\n\n# Set the http and https proxy environment variables\nexport http_proxy=socks5://127.0.0.1:1080\nexport https_proxy=socks5://127.0.0.1:1080\n')),(0,l.kt)("h4",{id:"proxychains-config"},"proxychains config"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/proxychains.conf \nsocks5  127.0.0.1 1080\n## comment proxy_dns\n# proxy_dns\n")),(0,l.kt)("h3",{id:"resetting-kde"},"Resetting KDE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"qdbus org.kde.KWin /Compositor suspend;\nrm ~/.cache/ksycoca5*;\nkquitapp5 plasmashell;\nkillall plasmashell;\nkstart5 plasmashell;\n")),(0,l.kt)("h3",{id:"click-on-the-screen"},"Click on the screen"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Install xdotool\nsudo pacman -S xdotool\nxdotool mousemove <x> <y> click 1\n# xdotool getmouselocation\n# xdotool mousemove 843 1044 click 1\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Simple script to click on the screen for given minutes and sleep time")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\n# Check for two arguments\nif [[ $# -ne 2 ]]; then\n    echo "Usage: $0 <minutes> <sleep>"\n    exit 1\nfi\n\n# Convert minutes to seconds\nRUN_TIME=$(echo "$1 * 60" | bc)\n\nwhile [[ $(echo "$RUN_TIME > 0" | bc) -eq 1 ]]; do\n    # Get screen resolution\n    RES=$(xdpyinfo | grep dimensions | awk \'{print $2}\')\n    WIDTH=$(echo $RES | awk -Fx \'{print $1}\')\n    HEIGHT=$(echo $RES | awk -Fx \'{print $2}\')\n\n    # Move mouse to center of screen and click\n    xdotool mousemove $((WIDTH/2)) $((HEIGHT/2))\n    xdotool click 1\n\n    # Sleep for specified time\n    sleep $2\n\n    # Decrement run time by sleep time\n    RUN_TIME=$(echo "$RUN_TIME - $2" | bc)\ndone\n')),(0,l.kt)("p",null,"And run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x click.sh\n./click.sh 10 0.5\n")),(0,l.kt)("h3",{id:"instant-cloud-file-share"},"Instant cloud file share"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# -F autodestroy=1 autodestroy on download or expire in 5\ncurl https://oshi.at -F f=@/home/true/backup.tar.gz -F expire=5 minutes\ncurl -F "file=@/home/mlibre/Downloads/backup.tar.gz" "https://file.io/?expires=1w"\n')),(0,l.kt)("h2",{id:"backup"},"Backup"),(0,l.kt)("h3",{id:"rsync"},"Rsync"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# Backup local directory to another location\nrsync -avz /path/to/source /path/to/destination\n\n# Backup local directory to remote server\nrsync -avz /path/to/local/directory user@remote.server:/path/to/remote/directory\n\n# Backup local directory to remote server, deleting files on remote server if they are deleted locally\nrsync -avz --delete /path/to/local/directory user@remote.server:/path/to/remote/directory\n\n# Create a full backup of the system to an external drive\nsudo rsync -aAXHv --exclude={"/dev/*","/proc/*","/sys/*","/tmp/*","/run/*","/mnt/*","/var/*","/media/*","/usr/*","/lib/*","/lib64/","/lost+found","/swapfile",".npm*",".npm/*","node_modules*","node_modules/*","mesa_shader_cache*","steamapps*","Data*","Steam*"} / /run/media/mlibre/H/OS/full-copy/\n')),(0,l.kt)("h3",{id:"partical-backup-using-locate"},"Partical Backup using locate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo tar -czvf backup.tar.gz $(locate x-ui)\nsudo tar -czvf backup.tar.gz $(locate x-ui) /root/\nsudo tar -czvf backup.tar.gz $(locate x-ui) /root/cert /root/cert.crt /root/private.key /root/.acme.sh\n\nsudo tar xvf backup.tar.gz -C / # Extract in root directory\n")),(0,l.kt)("h2",{id:"performance"},"Performance"),(0,l.kt)("h3",{id:"disable-linux-watchdogs-compaction-and-more"},"Disable Linux Watchdogs, compaction and more"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl start systemd-sysctl.service\nsudo systemctl enable systemd-sysctl.service\n# sudo nano /etc/sysctl.conf\n# And\nsudo nano /etc/sysctl.d/sys.conf\n\nnet.ipv4.tcp_fastopen=3\nnet.ipv4.ip_forward=1\nkernel.nmi_watchdog=0\nkernel.watchdog=0\nvm.compaction_proactiveness=0\nvm.zone_reclaim_mode=0\nvm.page_lock_unfairness=1\nkernel.perf_event_paranoid=-1\nfs.inode-nr = 200000\nvm.dirty_background_ratio=5\nvm.vfs_cache_pressure=50\nnet.ipv4.tcp_max_syn_backlog = 8192\nnet.ipv4.tcp_tw_reuse=1\nvm.min_free_kbytes=2500000\n")),(0,l.kt)("h3",{id:"improve-fstab-ssd-nvme-performance"},"Improve fstab, ssd, nvme performance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/fstab \nUUID=f74c37b2-8a12-4252-90a6-d31504507bcb / ext4  defaults,noatime,nodiratime,commit=60,barrier=0  0 1\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'sudo nano /etc/udev/rules.d/60-ioschedulers.rules\n\nACTION=="add|change", KERNEL=="nvme[0-9]n[0-9]", ATTR{queue/scheduler}="none"\n')),(0,l.kt)("h3",{id:"disabling-journaling"},"Disabling journaling"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'sudo tune2fs -f -O "^has_journal" /dev/sda2\n')),(0,l.kt)("h3",{id:"journal-size"},"Journal Size"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/journald.conf\nSystemMaxUse=100M\nsudo systemctl restart systemd-journald\n")),(0,l.kt)("h2",{id:"xdg"},"XDG"),(0,l.kt)("h3",{id:"make-a-startup-script-using-xdg-startup"},"Make a startup script using XDG startup"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ~/.config/autostart\nnano ~/.config/autostart/gamma_on_startup.desktop\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'[Desktop Entry]\nName=gamma-on-startup\nType=Application\nExec=bash -c  "/usr/local/bin/gamma_on_startup &> /dev/null" \nTerminal=true\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"desktop-file-validate ~/.config/autostart/gamma_on_startup.desktop\nchmod +x ~/.config/autostart/gamma_on_startup.desktop\n")),(0,l.kt)("p",null,"Example program:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo chmod a+rwx /usr/local/bin/\nnano /usr/local/bin/gamma_on_startup\n\nsleep 5\nexport DISPLAY=:0\nxrandr --output HDMI-A-0 --brightness 0.70 --gamma 0.70:0.70:0.70 \n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo chmod a+rwx /usr/local/bin/gamma_on_startup\n")),(0,l.kt)("h2",{id:"systemd"},"Systemd"),(0,l.kt)("h3",{id:"unit-files-locations"},"Unit files' locations"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl show --property=UnitPath\n")),(0,l.kt)("h3",{id:"analyzing"},"Analyzing"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"systemd-analyze\nsystemd-analyze blame\n\nsystemctl --state=failed\n\nsudo systemctl list-unit-files --type=service --state=enabled --all\nsudo systemctl list-unit-files | grep enabled\nsystemctl journal -u example.service\n")),(0,l.kt)("h3",{id:"reloading"},"Reloading"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl daemon-reload\n")),(0,l.kt)("h3",{id:"run-a-script-after-suspending-has-finished-resume"},"Run a script after suspending has finished (resume)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/system/gamma.service\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"[Unit]\nDescription=Start Script in terminal\nAfter=suspend.target graphical.target\n\n[Service]\nUser=mlibre\nType=idle\nEnvironment=DISPLAY=:0\nExecStartPre=/bin/sleep 10\nExecStart=/bin/bash /usr/local/bin/gamma_on_startup\n\n[Install]\nWantedBy=suspend.target graphical.target\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload\nsudo systemctl enable gamma.service\nsystemctl status gamma\njournalctl -u gamma\n")),(0,l.kt)("h2",{id:"autostarts-and-startup-scripts-and-programs-locations"},"Autostarts and Startup scripts and programs locations"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"nano .profile"),(0,l.kt)("li",{parentName:"ul"},"nano /etc/profile"),(0,l.kt)("li",{parentName:"ul"},"nano ~/.bash_profile"),(0,l.kt)("li",{parentName:"ul"},"nano .bashrc"),(0,l.kt)("li",{parentName:"ul"},"nano /etc/bash.bashrc"),(0,l.kt)("li",{parentName:"ul"},"ls /etc/profile.d/"),(0,l.kt)("li",{parentName:"ul"},"ls ~/.config/autostart"),(0,l.kt)("li",{parentName:"ul"},"ls /etc/xdg/autostart"),(0,l.kt)("li",{parentName:"ul"},"ls /usr/share/xsessions"),(0,l.kt)("li",{parentName:"ul"},"ls -1 /lib/systemd/system/.service /etc/systemd/system/.service"),(0,l.kt)("li",{parentName:"ul"},"sudo systemctl list-unit-files --type=service --state=enabled --all"),(0,l.kt)("li",{parentName:"ul"},"ls /etc/init.d/"),(0,l.kt)("li",{parentName:"ul"},"nano ~/.xinitrc"),(0,l.kt)("li",{parentName:"ul"},"nano /etc/X11/xinit/xinitrc"),(0,l.kt)("li",{parentName:"ul"},"ls /etc/X11/xinit/xinitrc.d/"),(0,l.kt)("li",{parentName:"ul"},"cat ~/.xserverrc"),(0,l.kt)("li",{parentName:"ul"},"ls /etc/pam.d/"),(0,l.kt)("li",{parentName:"ul"},"ls /etc/rc*"),(0,l.kt)("li",{parentName:"ul"},"cat /etc/xdg/lxsession/LXDE/autostart"),(0,l.kt)("li",{parentName:"ul"},"ls ~/.config/lxsession/LXDE/autostart"),(0,l.kt)("li",{parentName:"ul"},"crontab -e"),(0,l.kt)("li",{parentName:"ul"},"sudo crontab -e"),(0,l.kt)("li",{parentName:"ul"},"ls -rla /etc/cron.*"),(0,l.kt)("li",{parentName:"ul"},"cat /usr/lib/sddm/sddm.conf.d/default.conf"),(0,l.kt)("li",{parentName:"ul"},"cat /etc/sddm.conf.d/00_manjaro_settings.conf")),(0,l.kt)("h2",{id:"font"},"Font"),(0,l.kt)("h3",{id:"locations"},"Locations"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"~/.local/share/fonts/")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/usr/local/share/fonts/")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"/usr/share/fonts/"))),(0,l.kt)("h3",{id:"list"},"List"),(0,l.kt)("p",null,"List installed fonts"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"fc-match -a\nfc-list : file\n")),(0,l.kt)("h3",{id:"fira-code"},"Fira Code"),(0,l.kt)("p",null,"A popular code font."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S ttf-fira-code\nfc-match -a | grep -i fira\n")),(0,l.kt)("h3",{id:"cache"},"Cache"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo rm -v /var/cache/fontconfig/*\nfc-cache -r\n")),(0,l.kt)("h2",{id:"vulkan"},"Vulkan"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S vulkan-radeon lib32-vulkan-radeon\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/environment\nVK_ICD_FILENAMES=/usr/share/vulkan/icd.d/radeon_icd.i686.json:/usr/share/vulkan/icd.d/radeon_icd.x86_64.json\n")),(0,l.kt)("h2",{id:"steam-games"},"Steam Games"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Move Games to your local linux machine"),(0,l.kt)("li",{parentName:"ul"},"Disable steam overlay, steam inputs, ...")),(0,l.kt)("h3",{id:"link-ntfs-game-folder"},"Link NTFS game folder"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir -p /media/gamedisk\nsudo blkid # FA709D69709D2CFF\nid -u # 1000\nid -g # 1000\nsudo nano /etc/fstab\nUUID=FA709D69709D2CFF /media/gamedisk ntfs uid=1000,gid=1000,rw,user,exec,umask=000 0 0\n# UUID=FA709D69709D2CFF /media/gamedisk lowntfs-3g uid=1000,gid=1000,rw,user,exec,umask=000 0 0\nmkdir -p ~/.steam/steam/steamapps/compatdata\nsudo reboot\nln -s ~/.steam/steam/steamapps/compatdata /media/gamedisk/Steam/steamapps/\n")),(0,l.kt)("h3",{id:"run-using-proxy"},"Run using proxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"proxychains steam steam://rungameid/100\n")),(0,l.kt)("h3",{id:"disable-desktop-effects"},"Disable desktop effects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"qdbus org.kde.KWin /Compositor suspend\n# qdbus org.kde.KWin /Compositor resume\nxset -dpms\nxset s off\n")),(0,l.kt)("h2",{id:"lutris"},"lutris"),(0,l.kt)("h3",{id:"installation"},"Installation"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S telegram-desktop lutris vkd3d tsocks proxychains\n")),(0,l.kt)("h3",{id:"with-proxy"},"With Proxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/tsocks.conf\n\nserver = 127.0.0.1\nserver_port = 1080\nserver_type = 5\n\ntsocks lutris\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# make sure proxy_dns is commneted\nproxychains lutris\n")),(0,l.kt)("h3",{id:"proxy-per-game"},"Proxy per game"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Check show advanced options\n# Put /usr/bin/tsocks in\n# Game -> configuration -> System options -> command prefix\n")),(0,l.kt)("h3",{id:"unexpected-error"},"Unexpected error"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"rm -r ~/.wine\n")),(0,l.kt)("h2",{id:"install-genymotoin-android-emulator"},"Install Genymotoin Android emulator"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pamac install genymotion\n")),(0,l.kt)("h2",{id:"windows-11"},"Windows 11"),(0,l.kt)("h3",{id:"make-boatable-usb"},"Make boatable usb"),(0,l.kt)("h4",{id:"woeusb"},"WoeUsb"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -Suy p7zip python-pip python-wxpython\ngit clone https://github.com/WoeUSB/WoeUSB-ng.git\nsudo pip3 install .\nsudo woeusb --workaround-skip-grub --target-filesystem NTFS --device ~/Win11_22H2_English_x64v1.iso  /dev/sdb\n")),(0,l.kt)("h4",{id:"win2usb"},"Win2USB"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"https://github.com/ValdikSS/windows2usb\nchmod +x windows2usb*\n./windows2usb-0.2.4-x86_64.AppImage /dev/sdb ~/Win11_22H2_English_x64v1.iso gpt+uefintfs\n")),(0,l.kt)("h4",{id:"things-to-do-after-installing-windows-11"},"Things to do after installing Windows 11"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Download and install all the updates"),(0,l.kt)("li",{parentName:"ul"},"Enable Ransomware protection"),(0,l.kt)("li",{parentName:"ul"},"Download DimScreen, Copy it to the download folder. Open. click on the settings. set brightness to 20%. Make a shortcut to the desktop"),(0,l.kt)("li",{parentName:"ul"},"search for gamma calibration in windows settings. set it to minimum"),(0,l.kt)("li",{parentName:"ul"},"Adjust date and time: auto. Timezone tehran +3:30"),(0,l.kt)("li",{parentName:"ul"},"Downloading updates active hours: 24 hours format. 1->11"),(0,l.kt)("li",{parentName:"ul"},"Disable all data usages settings in privacy and security"),(0,l.kt)("li",{parentName:"ul"},"uninstall mail, teams, one drive. xbox, facebook, microsoft todo, sticky notes, tips, weather"),(0,l.kt)("li",{parentName:"ul"},"Install firefox and login"),(0,l.kt)("li",{parentName:"ul"},"Install protonVPN"),(0,l.kt)("li",{parentName:"ul"},"personalize: sunrise"),(0,l.kt)("li",{parentName:"ul"},"network connection: metered connection"),(0,l.kt)("li",{parentName:"ul"},"Display: 3840x2160, 200%"),(0,l.kt)("li",{parentName:"ul"},"Steam: add your games' location to the Games' folder library. make it as default"),(0,l.kt)("li",{parentName:"ul"},"Steam: If your games are in a ",(0,l.kt)("inlineCode",{parentName:"li"},"NTFS")," file system, follow ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ValveSoftware/Proton/wiki/Using-a-NTFS-disk-with-Linux-and-Windows"},"this")," to make game compatible with Linux."),(0,l.kt)("li",{parentName:"ul"},"Pause windows updates for 5 weeks"),(0,l.kt)("li",{parentName:"ul"},"Check windows startups apps"),(0,l.kt)("li",{parentName:"ul"},"App store: disable automatic update"),(0,l.kt)("li",{parentName:"ul"},'Leave from "AMD user experience program". AMD settings -> last tab -> last option'),(0,l.kt)("li",{parentName:"ul"},"windows features: WSL, virtual machine, hyper-v (for android and linux apps)"),(0,l.kt)("li",{parentName:"ul"},"wsl --update"),(0,l.kt)("li",{parentName:"ul"},"wsl --install -d Ubuntu"),(0,l.kt)("li",{parentName:"ul"},"Disable Error Reporting: WIN+R -> services.msc -> Windows Error Reporting Service -> Properties -> disable")),(0,l.kt)("h2",{id:"manjaroarch-linux"},"Manjaro/Arch Linux"),(0,l.kt)("h3",{id:"things-to-do-before-installing"},"Things to do before installing"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Backup important data. Recovery-keys, Passwords, Postman and ...  ")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cp -rf /home/mlibre/.local/share/TelegramDesktop /run/media/mlibre/D/caches\ncp $HISTFILE /run/media/mlibre/D/caches/\nrsync -aAXHv ~/my_data/ /run/media/mlibre/H/OS/my_data/\nsudo cp -r /etc /run/media/mlibre/D/caches/\n# ./data_rsync.bash\n# Copy systemctl units\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Mark EFI partition while installing Manjaro/Arch Linux as /boot/efi. Don't check Format option.")),(0,l.kt)("h3",{id:"things-to-do-after-installing"},"Things to do after installing"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Remove and disable unnecessary packages"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'echo "$USER ALL=(ALL:ALL) NOPASSWD: ALL" | sudo tee /etc/sudoers.d/$USER\nsudo systemctl disable pamac-daemon\nsudo systemctl disable pamac-mirrorlist.timer\nsudo systemctl disable pamac-mirrorlist.service\nsudo pacman -R manjaro-hello web-installer-url-handler matray print-manager samba kdenetwork-filesharing thunderbird hplip cups yakuake manjaro-printer gutenprint cups-pdf snapd libpamac-snap-plugin flatpak libpamac-flatpak-plugin bluedevil timeshift timeshift-autosnap-manjaro pamac-tray-icon-plasma kdeconnect\n'))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Pacman downloads parallel"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/pacman.conf\nParallelDownloads = 5\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Upgrade"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'pamac update --force-refresh\nsudo pacman-mirrors --fasttrack\nsudo pacman -Syyuu\nsudo pacman -S telegram-desktop unzip thermald ntfs-3g\nsudo systemctl enable --now thermald.service\npamac install visual-studio-code-bin onlyoffice-bin microsoft-edge-stable-bin\n\n# Disable "Show mini menu when selecting text" in microsoft edge settings\n'))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Import Data"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"cp -r /run/media/mlibre/H/OS/caches/TelegramDesktop /home/mlibre/.local/share/\ncp -r /run/media/mlibre/H/OS/my_data/ ~/my_data\n# ./import_data.bash\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Make an XDG autostart script for gamma adjustment")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Put the gamma script in the ",(0,l.kt)("inlineCode",{parentName:"p"},".bashrc")," and ",(0,l.kt)("inlineCode",{parentName:"p"},".zshrc")," as well")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Install ProtonVPN, mailspring, shadowsocks, Nekoray"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pamac install shadowsocks-rust-bin\npamac build protonvpn\npamac build mailspring\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Remove Mainspring from startups. Use 24-hour clock. Uncheck automatically load images. Disabsetle mail signature.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Install mlocate"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S mlocate\nsudo updatedb\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"KDE Settings -> Disable Mouse acceleration")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"KDE Settings -> Startup and Shutdown: Start with empty session, Choose KDE Screen Saver, Review background services and Autostarts.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"KDE Settings -> Appearance -> Theme -> Breeze Dark, Breath Dark")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"KDE Settings -> Appearance -> Font -> Enabled Anti-Aliasing, RGB, Slight. all +1 PT")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"KDE Settings -> Workspace -> Search -> Disable Web Search Keywords")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"KDE Settings -> Workspace Behavior -> Activities -> Privacy -> Dont remember soft")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"KDE Settings -> Search for kRunner -> settings -> uncheck all")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Pin Firefox, Terminal, ProtonVPN, Kate and VSCode to the panel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Software Center: Disable automatic updates, Add AUR support")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Remove Virtual Desktops")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Remembers sudo password"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/sudoers\nDefaults        timestamp_timeout=300 # 5 hours\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Make a Swapfile"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'sudo dd if=/dev/zero of=/swapfile bs=1M count=4096 status=progress\nsudo chmod 600 /swapfile\nsudo mkswap /swapfile\nsudo swapon /swapfile\ncat /etc/fstab\nsudo bash -c "echo /swapfile none swap defaults 0 0 >> /etc/fstab"\n\nsudo nano /etc/sysctl.conf\n# vm.swappiness=10\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Fix time difference between linux and windows"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo timedatectl set-local-rtc 1 --adjust-system-clock\n# sudo timedatectl set-local-rtc 1\nsudo ntpdate time.nist.gov # update time\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Softwares"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S qbittorrent firefox libreoffice-fresh meld vlc ntfs-3g  aria2 ttf-ubuntu-font-family gnome-keyring libsecret core/iputils clinfo tor torsocks steam-native-runtime\n# sudo pacman -S electrum gimp gparted firewalld clamav deluge\n\nsudo systemctl disable bluetooth.service\nsudo systemctl disable tor.service\nsudo systemctl disable samba\nsudo systemctl disable cups\nbalooctl disable && balooctl purge &&\nsudo rm /etc/cron.d/0hourly\nsudo rm /etc/xdg/autostart/baloo_file.desktop\nsudo rm /etc/xdg/autostart/pamac-tray-budgie.desktop\nsudo rm /etc/xdg/autostart/pamac-tray.desktop\nsudo rm /etc/xdg/autostart/msm_kde_notifier.desktop\nsudo rm /etc/xdg/autostart/org.gnome.SettingsDaemon*\nsudo rm /etc/xdg/autostart/print-applet.desktop\n\n# sudo systemctl enable firewalld\n# sudo systemctl restart firewalld\n\n# sudo firewall-cmd --permanent --add-service=https\n# sudo firewall-cmd --permanent --add-port=30303/tcp\n# sudo firewall-cmd --permanent --add-port=30303/udp\n\n# sudo systemctl restart --now clamav-daemon\n# sudo freshclam\n# clamscan --recursive --infected /home\n# sudo systemctl disable --now clamav-freshclam\n# sudo systemctl disable --now clamav-daemon\n# sudo systemctl enable --now clamav-daemon\n# sudo systemctl enable --now clamav-freshclam\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Firefox: Enable DNS over HTTPS")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Enable automatic mounting of external drives: Settings -> Hardware -> Removable Storage -> Automount")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Konsole config:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Font: Monospace 13pt"),(0,l.kt)("li",{parentName:"ul"},"Theme: Breath (customized, a bit darker)"),(0,l.kt)("li",{parentName:"ul"},"Shell: Manjaro zsh"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Steam: Allow auto-update only between 1AM - 11AM"))),(0,l.kt)("h3",{id:"amdgpu"},"AMDGPU"),(0,l.kt)("h4",{id:"tearfree-enablepageflip-dri3"},"TearFree, EnablePageFlip, DRI3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# settings files\n/usr/share/X11/xorg.conf.d/\n/etc/X11/xorg.conf.d/\n\nsudo nano /usr/share/X11/xorg.conf.d/10-amdgpu.conf\n\nSection "OutputClass"\n    Identifier "AMDgpu"\n    MatchDriver "amdgpu"\n    Driver "amdgpu"\n    Option "TearFree" "true"\n    Option "DRI" "3"\n    Option "EnablePageFlip" "on"\nEndSection\n\ncat /var/log/Xorg.0.log | grep -i tear\n')),(0,l.kt)("h4",{id:"reducing-dri-latency"},"Reducing DRI latency"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'sudo nano /etc/drirc\n\n<driconf>\n   <device>\n       <application name="Default">\n           <option name="vblank_mode" value="0" />\n       </application>\n   </device>\n</driconf>\n')),(0,l.kt)("h4",{id:"check-xorg-config-file"},"check xorg config file"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo Xorg -config /usr/share/X11/xorg.conf.d/10-amdgpu.conf\n")),(0,l.kt)("h4",{id:"blocking-radon"},"Blocking radon"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/modprobe.d/radeon.conf\n\nblacklist radeon\n")),(0,l.kt)("h4",{id:"install-amdgpu-pro"},"Install AMDGPU-PRO"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# https://wiki.archlinux.org/title/AMDGPU_PRO\npamac install vulkan-amdgpu-pro lib32-vulkan-amdgpu-pro \npamac install amdgpu-pro-oglp lib32-amdgpu-pro-oglp \n# pamac install amdgpu-pro-libgl lib32-amdgpu-pro-libgl\n# pamac install opencl-amd\n# pamac install amf-amdgpu-pro\nglxinfo | grep "OpenGL vendor string"\nlspci -v | grep -A 10 VGA\nvk_pro steam\n')),(0,l.kt)("h4",{id:"uninstall-amdgpu-pro"},"Uninstall AMDGPU-PRO"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'pacman -R $(pacman -Qg Radeon_Software_for_Linux | cut -f2 -d" ")\n')),(0,l.kt)("h3",{id:"blacklist-radeon"},"Blacklist Radeon"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/modprobe.d/radeon.conf \nblacklist radeon\n")),(0,l.kt)("h3",{id:"install-wine"},"Install Wine"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# pamac install wine-stable\nsudo pacman -S wine winetricks\nwinetricks corefonts vcrun2013 vcrun2015 winhttp allcodecs d3dcompiler_42 d3dcompiler_43 d3dcompiler_47 d3dx9 dotnet dxvk quartz\nsudo setcap cap_net_raw+epi /usr/bin/wine\n")),(0,l.kt)("h2",{id:"install-a-new-os-on-the-phone"},"Install a new os on the phone"),(0,l.kt)("h3",{id:"backup-data"},"Backup data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S android-tools\nsudo adb devices\nadb backup -apk -shared -all -f backup-file.ab\n")),(0,l.kt)("h3",{id:"restore"},"Restore"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"adb restore file.ab\n")),(0,l.kt)("h3",{id:"enable-developer-options"},"Enable Developer options"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Several times clicks on the kernel tab"),(0,l.kt)("li",{parentName:"ul"},"Allow OEM unlocking"),(0,l.kt)("li",{parentName:"ul"},"Enter Download mod:",(0,l.kt)("ol",{parentName:"li"},(0,l.kt)("li",{parentName:"ol"},"Turn off the phone.  "),(0,l.kt)("li",{parentName:"ol"},"Hold vol key up + down."),(0,l.kt)("li",{parentName:"ol"},'Now in the warning message page. choose "unlocking bootloader" that will perform a factory reset')))),(0,l.kt)("h3",{id:"install-odin-tools-for-samsung--314"},"Install odin tools for Samsung >= 3.14"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://samsungodin.com/"},"https://samsungodin.com/")),(0,l.kt)("h3",{id:"install-samsung-driver"},"Install samsung driver"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://developer.samsung.com/android-usb-driver"},"https://developer.samsung.com/android-usb-driver")),(0,l.kt)("h3",{id:"install-adb"},"Install adb"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://developer.android.com/studio/releases/platform-tools"},"https://developer.android.com/studio/releases/platform-tools")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"adb reboot download\n")),(0,l.kt)("h3",{id:"download-twrp"},"Download TWRP"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.droidthunder.com/install-twrp-recovery-on-galaxy-A10/"},"https://www.droidthunder.com/install-twrp-recovery-on-galaxy-A10/"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://twrp.me/samsung/samsunggalaxya10.html"},"https://twrp.me/samsung/samsunggalaxya10.html")),(0,l.kt)("h4",{id:"convert-it-to-md5"},"convert it to .md5"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.droidthunder.com/convert-img-to-tar-md5/"},"https://www.droidthunder.com/convert-img-to-tar-md5/")),(0,l.kt)("h3",{id:"run-odin-as-administrator"},"Run Odin as administrator"),(0,l.kt)("p",null,"follow the instructions\n",(0,l.kt)("a",{parentName:"p",href:"https://www.droidthunder.com/install-twrp-recovery-on-galaxy-A10/"},"https://www.droidthunder.com/install-twrp-recovery-on-galaxy-A10/")),(0,l.kt)("h3",{id:"install-bluestack"},"Install bluestack"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.bluestacks.com/"},"https://www.bluestacks.com/")),(0,l.kt)("p",null,"Download, login and install whatsapp, telegram and google"),(0,l.kt)("h3",{id:"youtube-dl"},"Youtube-dl"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# Install\nsudo pacman -S youtube-dl yt-dlp\n\n# Download best quality\nyt-dlp "https://www.youtube.com/link"\n\nyt-dlp -f b --write-description  --write-auto-sub --write-subs --embed-subs --write-info-json --max-filesize 100M --download-sections "*6:02-13:40" --proxy socks5://127.0.0.1:1080/ --verbose "https://www.youtube.com/link"\n\n# List formats and sizes\nyt-dlp -F "https://www.youtube.com/link"\nyt-dlp -f 22 "https://www.youtube.com/link" \n\nyoutube-dl -f best "https://www.youtube.com/link"\n')),(0,l.kt)("h3",{id:"add-alias"},"Add Alias"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"nano ~/.bashrc\nalias yd='yt-dlp -f b --write-auto-sub --write-subs --embed-subs --write-info-json --max-filesize 100M'\nyd \"link\"\n")))}d.isMDXComponent=!0}}]);