"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8160],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>h});var o=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,o,s=function(e,n){if(null==e)return{};var t,o,s={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var c=o.createContext({}),a=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=a(e.components);return o.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,s=e.mdxType,i=e.originalType,c=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),u=a(t),m=s,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return t?o.createElement(h,l(l({ref:n},p),{},{components:t})):o.createElement(h,l({ref:n},p))}));function h(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var i=t.length,l=new Array(i);l[0]=m;var r={};for(var c in n)hasOwnProperty.call(n,c)&&(r[c]=n[c]);r.originalType=e,r[u]="string"==typeof e?e:s,l[1]=r;for(var a=2;a<i;a++)l[a]=t[a];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2952:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>a});var o=t(7462),s=(t(7294),t(3905));const i={sidebar_position:13,tags:["Linux","shell","bash","zsh","script"]},l="Shell",r={unversionedId:"linux/shell",id:"linux/shell",title:"Shell",description:"Command types",source:"@site/docs/linux/shell.md",sourceDirName:"linux",slug:"/linux/shell",permalink:"/Wisdom-Hub/linux/shell",draft:!1,tags:[{label:"Linux",permalink:"/Wisdom-Hub/tags/linux"},{label:"shell",permalink:"/Wisdom-Hub/tags/shell"},{label:"bash",permalink:"/Wisdom-Hub/tags/bash"},{label:"zsh",permalink:"/Wisdom-Hub/tags/zsh"},{label:"script",permalink:"/Wisdom-Hub/tags/script"}],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13,tags:["Linux","shell","bash","zsh","script"]},sidebar:"tutorialSidebar",previous:{title:"Editor",permalink:"/Wisdom-Hub/linux/editor"},next:{title:"process",permalink:"/Wisdom-Hub/linux/processes"}},c={},a=[{value:"Command types",id:"command-types",level:2},{value:"Bash",id:"bash",level:2},{value:"Case-insensitive auto completion",id:"case-insensitive-auto-completion",level:3},{value:"Simple Bash Scripts",id:"simple-bash-scripts",level:2},{value:"Mouse location",id:"mouse-location",level:3},{value:"Get screen resolution",id:"get-screen-resolution",level:3},{value:"Click, Move and scroll on the screen",id:"click-move-and-scroll-on-the-screen",level:3},{value:"zsh",id:"zsh",level:2}],p={toc:a},u="wrapper";function d(e){let{components:n,...t}=e;return(0,s.kt)(u,(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"shell"},"Shell"),(0,s.kt)("h2",{id:"command-types"},"Command types"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"type ls\n# ls is an alias for ls $LS_OPTIONS\n\ntype ssh\n# ssh is /usr/bin/ssh\n")),(0,s.kt)("h2",{id:"bash"},"Bash"),(0,s.kt)("h3",{id:"case-insensitive-auto-completion"},"Case-insensitive auto completion"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# Add the following line to the /etc/inputrc file to enable case-insensitive auto completion\necho 'set completion-ignore-case On' | sudo tee -a /etc/inputrc\n\n# or as root\necho 'set completion-ignore-case On' >> /etc/inputrc \n\n# or for current user only\necho \"set completion-ignore-case on\" >> ~/.inputrc\n")),(0,s.kt)("h2",{id:"simple-bash-scripts"},"Simple Bash Scripts"),(0,s.kt)("h3",{id:"mouse-location"},"Mouse location"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"while true; do\n  sleep 2\n  xdotool getmouselocation\ndone\n")),(0,s.kt)("h3",{id:"get-screen-resolution"},"Get screen resolution"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"RES=$(xdpyinfo | grep dimensions | awk '{print $2}')\nWIDTH=$(echo $RES | awk -Fx '{print $1}')\nHEIGHT=$(echo $RES | awk -Fx '{print $2}')\n")),(0,s.kt)("h3",{id:"click-move-and-scroll-on-the-screen"},"Click, Move and scroll on the screen"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\n\n# Usage: ./click2.bash 3 30\n\n# Check for two arguments\nif [[ $# -ne 3 ]]; then\n echo "Usage: $0 <mouse idle time in seconds> <sleep time in each loop> <specific action each Nth time>"\n exit 1\nfi\n\nmousemoveAndClick() {\n # Move the mouse to the specified coordinates\n xdotool mousemove $1 $2\n # mouse click\n xdotool click 1\n # Sleep for 1 second\n sleep 1\n}\n\nscroll() {\n local direction=$1\n local count=$2\n if [[ $direction == "up" ]]; then\n  for i in $(seq 1 $count); do\n   xdotool click 4\n   sleep 0.5\n  done    \n elif [[ $direction == "down" ]]; then\n  for i in $(seq 1 $count); do   \n   xdotool click 5 \n   sleep 0.5\n  done\n fi\n}\n\nremove_esc() {\n # Move the mouse to the specified coordinates\n xdotool mousemove 1575 572\n # mouse click\n xdotool click 1\n # Sleep for 1 second\n sleep 1\n}\n\npress_esc_and_click() {\n # Press ESC\n xdotool key Escape\n # Sleep for 1 second\n sleep 1\n # mouse click\n xdotool click 1\n remove_esc\n}\n\n\n\nbuy() {\n # Move the mouse to the specified coordinates\n xdotool mousemove 1556 1230\n # mouse click\n xdotool click 1\n # Sleep for 1 second\n sleep 1\n}\n\ncounter=0\n# Get the idle time in milliseconds\nIDLE_TIME=$(echo "$1 * 1000" | bc)\n\nwhile true; do\n # Get the current idle time of the mouse pointer in milliseconds\n IDLE=$(xprintidle)\n\n # Check if the mouse has been idle for at least the specified time\n if [[ $IDLE -ge $IDLE_TIME ]]; then\n   \n  ((counter++))\n  echo "Increasing $counter"\n\n  # Boss\n  mousemoveAndClick 34 393\n  press_esc_and_click\n  \n  # top left\n  mousemoveAndClick 1173 647\n  buy\n\n  if [[ $((counter % $3)) -eq 0 ]]; then\n   scroll "down" 40\n  fi\n fi\n\n # Sleep for specified time\n sleep $2\ndone\n')),(0,s.kt)("p",null,"And run:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"chmod +x click.sh\n./click.sh 1 30 50\n")),(0,s.kt)("h2",{id:"zsh"},"zsh"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S zsh\n")))}d.isMDXComponent=!0}}]);