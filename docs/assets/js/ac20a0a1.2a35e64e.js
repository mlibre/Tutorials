"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6585],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>g});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),p=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},m=function(e){var a=p(e.components);return n.createElement(s.Provider,{value:a},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=p(t),d=r,g=c["".concat(s,".").concat(d)]||c[d]||u[d]||l;return t?n.createElement(g,i(i({ref:a},m),{},{components:t})):n.createElement(g,i({ref:a},m))}));function g(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=d;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o[c]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},717:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=t(7462),r=(t(7294),t(3905));const l={sidebar_position:5,tags:["Linux","Manjaro"]},i="Manjaro/Arch Linux",o={unversionedId:"linux/manjaro",id:"linux/manjaro",title:"Manjaro/Arch Linux",description:"Things to do before installing",source:"@site/docs/linux/manjaro.md",sourceDirName:"linux",slug:"/linux/manjaro",permalink:"/Tutorials/linux/manjaro",draft:!1,tags:[{label:"Linux",permalink:"/Tutorials/tags/linux"},{label:"Manjaro",permalink:"/Tutorials/tags/manjaro"}],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,tags:["Linux","Manjaro"]},sidebar:"tutorialSidebar",previous:{title:"Systemd",permalink:"/Tutorials/linux/systemd"},next:{title:"Vulkan",permalink:"/Tutorials/linux/game and graphic"}},s={},p=[{value:"Things to do before installing",id:"things-to-do-before-installing",level:2},{value:"Things to do after installing",id:"things-to-do-after-installing",level:2},{value:"AMDGPU",id:"amdgpu",level:2},{value:"TearFree, EnablePageFlip, DRI3",id:"tearfree-enablepageflip-dri3",level:2},{value:"Reducing DRI latency",id:"reducing-dri-latency",level:2},{value:"check xorg config file",id:"check-xorg-config-file",level:2},{value:"Blocking radon",id:"blocking-radon",level:2},{value:"Install AMDGPU-PRO",id:"install-amdgpu-pro",level:2},{value:"Uninstall AMDGPU-PRO",id:"uninstall-amdgpu-pro",level:2},{value:"Blacklist Radeon",id:"blacklist-radeon",level:2},{value:"Install Wine",id:"install-wine",level:2}],m={toc:p},c="wrapper";function u(e){let{components:a,...t}=e;return(0,r.kt)(c,(0,n.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"manjaroarch-linux"},"Manjaro/Arch Linux"),(0,r.kt)("h2",{id:"things-to-do-before-installing"},"Things to do before installing"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Backup important data. Recovery-keys, Passwords, Postman and ...  ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cp -rf /home/mlibre/.local/share/TelegramDesktop /run/media/mlibre/D/caches\ncp $HISTFILE /run/media/mlibre/D/caches/\nrsync -aAXHv ~/my_data/ /run/media/mlibre/H/OS/my_data/\nsudo cp -r /etc /run/media/mlibre/D/caches/\n# ./data_rsync.bash\n# Copy systemctl units\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Mark EFI partition while installing Manjaro/Arch Linux as /boot/efi. Don't check Format option.")),(0,r.kt)("h2",{id:"things-to-do-after-installing"},"Things to do after installing"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Remove and disable unnecessary packages"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'echo "$USER ALL=(ALL:ALL) NOPASSWD: ALL" | sudo tee /etc/sudoers.d/$USER\nsudo systemctl disable pamac-daemon\nsudo systemctl disable pamac-mirrorlist.timer\nsudo systemctl disable pamac-mirrorlist.service\nsudo pacman -R manjaro-hello web-installer-url-handler matray print-manager samba kdenetwork-filesharing thunderbird hplip cups yakuake manjaro-printer gutenprint cups-pdf snapd libpamac-snap-plugin flatpak libpamac-flatpak-plugin bluedevil timeshift timeshift-autosnap-manjaro pamac-tray-icon-plasma kdeconnect vde2  qemu-common qemu-system-arm qemu-user-static-binfmt qemu-system-arm-firmware scrcpy\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Pacman downloads parallel"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/pacman.conf\nParallelDownloads = 5\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Upgrade"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pamac update --force-refresh\nsudo pacman-mirrors --fasttrack\nsudo pacman -Syyuu\nsudo pacman -S telegram-desktop unzip thermald ntfs-3g\nsudo systemctl enable --now thermald.service\npamac install visual-studio-code-bin onlyoffice-bin microsoft-edge-stable-bin\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Import Data"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cp -r /run/media/mlibre/H/OS/caches/TelegramDesktop /home/mlibre/.local/share/\ncp -r /run/media/mlibre/H/OS/my_data/ ~/my_data\n# ./import_data.bash\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Make an XDG autostart script for gamma adjustment")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Put the gamma script in the ",(0,r.kt)("inlineCode",{parentName:"p"},".bashrc")," and ",(0,r.kt)("inlineCode",{parentName:"p"},".zshrc")," as well")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Install ProtonVPN, mailspring, shadowsocks, Nekoray"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pamac install shadowsocks-rust-bin\npamac build protonvpn\npamac build mailspring\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Remove Mainspring from startups. Use 24-hour clock. Uncheck automatically load images. Disabsetle mail signature.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Install mlocate"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S mlocate\nsudo updatedb\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"KDE Settings -> Disable Mouse acceleration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"KDE Settings -> Startup and Shutdown: Start with empty session, Choose KDE Screen Saver, Review background services and Autostarts.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"KDE Settings -> Appearance -> Theme -> Breeze Dark, Breath Dark")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"KDE Settings -> Appearance -> Font -> Enabled Anti-Aliasing, RGB, Slight. all +1 PT")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"KDE Settings -> Workspace -> Search -> Disable Web Search Keywords")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"KDE Settings -> Workspace Behavior -> Activities -> Privacy -> Dont remember soft")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"KDE Settings -> Search for kRunner -> settings -> uncheck all")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Pin Firefox, Terminal, ProtonVPN, Kate and VSCode to the panel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Software Center: Disable automatic updates, Add AUR support")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Remove Virtual Desktops")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Remembers sudo password"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/sudoers\nDefaults        timestamp_timeout=300 # 5 hours\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Make a Swapfile"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'sudo dd if=/dev/zero of=/swapfile bs=1M count=4096 status=progress\nsudo chmod 600 /swapfile\nsudo mkswap /swapfile\nsudo swapon /swapfile\ncat /etc/fstab\nsudo bash -c "echo /swapfile none swap defaults 0 0 >> /etc/fstab"\n\nsudo nano /etc/sysctl.conf\n# vm.swappiness=10\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Fix time difference between linux and windows"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo timedatectl set-local-rtc 1 --adjust-system-clock\n# sudo timedatectl set-local-rtc 1\nsudo ntpdate time.nist.gov # update time\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Softwares"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S qbittorrent firefox libreoffice-fresh meld vlc ntfs-3g  aria2 ttf-ubuntu-font-family gnome-keyring libsecret core/iputils clinfo tor torsocks steam-native-runtime\n# sudo pacman -S electrum gimp gparted firewalld clamav deluge\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Firefox: Enable DNS over HTTPS")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Enable automatic mounting of external drives: Settings -> Hardware -> Removable Storage -> Automount")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Konsole config:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Font: Monospace 13pt"),(0,r.kt)("li",{parentName:"ul"},"Theme: Breath (customized, a bit darker)"),(0,r.kt)("li",{parentName:"ul"},"Shell: Manjaro zsh"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Steam: Allow auto-update only between 1AM - 11AM")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Performance"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl disable bluetooth.service\nsudo systemctl disable tor.service\nsudo systemctl disable samba\nsudo systemctl disable cups\nbalooctl disable && balooctl purge &&\nsudo rm /etc/cron.d/0hourly\nsudo rm /etc/xdg/autostart/baloo_file.desktop\nsudo rm /etc/xdg/autostart/pamac-tray-budgie.desktop\nsudo rm /etc/xdg/autostart/pamac-tray.desktop\nsudo rm /etc/xdg/autostart/msm_kde_notifier.desktop\nsudo rm /etc/xdg/autostart/org.gnome.SettingsDaemon*\nsudo rm /etc/xdg/autostart/print-applet.desktop\n\n# sudo systemctl enable firewalld\n# sudo systemctl restart firewalld\n\n# sudo firewall-cmd --permanent --add-service=https\n# sudo firewall-cmd --permanent --add-port=30303/tcp\n# sudo firewall-cmd --permanent --add-port=30303/udp\n\n# sudo systemctl restart --now clamav-daemon\n# sudo freshclam\n# clamscan --recursive --infected /home\n# sudo systemctl disable --now clamav-freshclam\n# sudo systemctl disable --now clamav-daemon\n# sudo systemctl enable --now clamav-daemon\n# sudo systemctl enable --now clamav-freshclam\n")),(0,r.kt)("h2",{id:"amdgpu"},"AMDGPU"),(0,r.kt)("h2",{id:"tearfree-enablepageflip-dri3"},"TearFree, EnablePageFlip, DRI3"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# settings files\n/usr/share/X11/xorg.conf.d/\n/etc/X11/xorg.conf.d/\n\nsudo nano /usr/share/X11/xorg.conf.d/10-amdgpu.conf\n\nSection "OutputClass"\n    Identifier "AMDgpu"\n    MatchDriver "amdgpu"\n    Driver "amdgpu"\n    Option "TearFree" "true"\n    Option "DRI" "3"\n    Option "EnablePageFlip" "on"\nEndSection\n\ncat /var/log/Xorg.0.log | grep -i tear\n')),(0,r.kt)("h2",{id:"reducing-dri-latency"},"Reducing DRI latency"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'sudo nano /etc/drirc\n\n<driconf>\n   <device>\n       <application name="Default">\n           <option name="vblank_mode" value="0" />\n       </application>\n   </device>\n</driconf>\n')),(0,r.kt)("h2",{id:"check-xorg-config-file"},"check xorg config file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo Xorg -config /usr/share/X11/xorg.conf.d/10-amdgpu.conf\n")),(0,r.kt)("h2",{id:"blocking-radon"},"Blocking radon"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/modprobe.d/radeon.conf\n\nblacklist radeon\n")),(0,r.kt)("h2",{id:"install-amdgpu-pro"},"Install AMDGPU-PRO"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# https://wiki.archlinux.org/title/AMDGPU_PRO\npamac install vulkan-amdgpu-pro lib32-vulkan-amdgpu-pro \npamac install amdgpu-pro-oglp lib32-amdgpu-pro-oglp \n# pamac install amdgpu-pro-libgl lib32-amdgpu-pro-libgl\n# pamac install opencl-amd\n# pamac install amf-amdgpu-pro\nglxinfo | grep "OpenGL vendor string"\nlspci -v | grep -A 10 VGA\nvk_pro steam\n')),(0,r.kt)("h2",{id:"uninstall-amdgpu-pro"},"Uninstall AMDGPU-PRO"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'pacman -R $(pacman -Qg Radeon_Software_for_Linux | cut -f2 -d" ")\n')),(0,r.kt)("h2",{id:"blacklist-radeon"},"Blacklist Radeon"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/modprobe.d/radeon.conf \nblacklist radeon\n")),(0,r.kt)("h2",{id:"install-wine"},"Install Wine"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# pamac install wine-stable\nsudo pacman -S wine winetricks\nwinetricks corefonts vcrun2013 vcrun2015 winhttp allcodecs d3dcompiler_42 d3dcompiler_43 d3dcompiler_47 d3dx9 dotnet dxvk quartz\nsudo setcap cap_net_raw+epi /usr/bin/wine\n")))}u.isMDXComponent=!0}}]);