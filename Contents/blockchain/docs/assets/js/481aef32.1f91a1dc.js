"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[375],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,h=m["".concat(p,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3032:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={title:"ERC-721 From Scratch",tags:["ERC-721","Ethereum"]},o="Step By Step guide on how to create your very own ERC-721 token",l={unversionedId:"Ethereum/ERC721/readme",id:"Ethereum/ERC721/readme",title:"ERC-721 From Scratch",description:"You can find the codes and files in the Github repo.",source:"@site/docs/Ethereum/ERC721/readme.md",sourceDirName:"Ethereum/ERC721",slug:"/Ethereum/ERC721/",permalink:"/blockchain/Ethereum/ERC721/",draft:!1,tags:[{label:"ERC-721",permalink:"/blockchain/tags/erc-721"},{label:"Ethereum",permalink:"/blockchain/tags/ethereum"}],version:"current",frontMatter:{title:"ERC-721 From Scratch",tags:["ERC-721","Ethereum"]},sidebar:"tutorialSidebar",previous:{title:"ERC20 From Scratch",permalink:"/blockchain/Ethereum/ERC20/"},next:{title:"Using MetaMask",permalink:"/blockchain/Ethereum/MetaMask/"}},p={},s=[{value:"Options",id:"options",level:2},{value:"Importing an account into Geth",id:"importing-an-account-into-geth",level:2},{value:"Unlocking an account in <strong>Geth</strong>",id:"unlocking-an-account-in-geth",level:2},{value:"Running Deployer",id:"running-deployer",level:2},{value:"Settings",id:"settings",level:2},{value:"Images",id:"images",level:2},{value:"Interacting via Geth",id:"interacting-via-geth",level:2},{value:"Interacting via web3js",id:"interacting-via-web3js",level:2}],c={toc:s},m="wrapper";function u(e){let{components:t,...i}=e;return(0,r.kt)(m,(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"step-by-step-guide-on-how-to-create-your-very-own-erc-721-token"},"Step By Step guide on how to create your very own ERC-721 token"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You can find the ",(0,r.kt)("strong",{parentName:"p"},"codes")," and ",(0,r.kt)("strong",{parentName:"p"},"files")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mlibre/blockchain/tree/master/Tutorials/Ethereum/ERC721"},(0,r.kt)("inlineCode",{parentName:"a"},"in the Github repo")),".")),(0,r.kt)("p",null,"In this guide, we will go through the process of how to create an ",(0,r.kt)("inlineCode",{parentName:"p"},"ERC-721")," token.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"ERC-721")," is a standard for representing ownership of non-fungible tokens.",(0,r.kt)("br",{parentName:"p"}),"\n","a non-fungible token can represnte a piace of data stored somewhere, like a decnetrizled storage.  "),(0,r.kt)("p",null,"We are going to create an ERC-721 token that represnte a picture i have stored in ",(0,r.kt)("a",{parentName:"p",href:"https://siasky.net/"},"siasky"),".  "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://siasky.net/EABmgOTKUkcmmxYebuLZKQYUw6rygnC0SDLJ84pVCEnn_A"},"https://siasky.net/EABmgOTKUkcmmxYebuLZKQYUw6rygnC0SDLJ84pVCEnn_A"))),(0,r.kt)("h1",{id:"requirements"},"Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Nodejs"),": 14",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"openzeppelin/contracts"),": 4.3"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ethereum-smart-contract-deployer")," : 1.1.6",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"solc"),": 0.8.9"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"web3"),": 1.6.0")))))),(0,r.kt)("p",null,"You can install ",(0,r.kt)("inlineCode",{parentName:"p"},"Nodejs"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Solidity")," in your ",(0,r.kt)("strong",{parentName:"p"},"Linux/Windows")," with your package manager. in this case ",(0,r.kt)("inlineCode",{parentName:"p"},"Pacman")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo pacman -S nodejs geth\nsudo npm install -g solc\nsolcjs --version\n")),(0,r.kt)("p",null,"Clone the repo and install dependencies"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/mlibre/blockchain\ncd Ethereum/ERC721/\nnpm i\nnpm i --dev-only\n")),(0,r.kt)("h1",{id:"files"},"Files"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ERC721Basic.sol"),": The contract source code"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"main.js"),": A contract deployer written in ",(0,r.kt)("strong",{parentName:"li"},"Nodejs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"bin"),": Compile's output")),(0,r.kt)("h1",{id:"getting-start"},"Getting start"),(0,r.kt)("p",null,"As you may have already noticed, we are using the ",(0,r.kt)("strong",{parentName:"p"},"openzeppelin")," contracts V4.",(0,r.kt)("br",{parentName:"p"}),"\n","So the contract code, ",(0,r.kt)("inlineCode",{parentName:"p"},"ERC721Basic.sol")," is basically is few lines of codes!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport "./ERC721.sol";\nimport "./Ownable.sol";\n\ncontract MLBNft is ERC721, Ownable {\n    constructor() ERC721("MLBNft", "MLBn") {\n        super._mint(msg.sender, 1);\n    }\n\n    function _baseURI() internal pure override returns (string memory) {\n        return "https://siasky.net/EABmgOTKUkcmmxYebuLZKQYUw6rygnC0SDLJ84pVCEnn_A";\n    }\n\n    function safeMint(address to, uint256 tokenId) public onlyOwner {\n        _safeMint(to, tokenId);\n    }\n}\n\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"MLBNft")," is the token name.",(0,r.kt)("br",{parentName:"p"}),"\n","And ",(0,r.kt)("inlineCode",{parentName:"p"},"MLBn"),", that is the symbol."),(0,r.kt)("h1",{id:"compile-via-solc"},"Compile via Solc"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"You don't have to compile the contract with ",(0,r.kt)("inlineCode",{parentName:"p"},"solc")," as ",(0,r.kt)("inlineCode",{parentName:"p"},"Contract Deployer.js")," will compile it itself. but it is good to see if there are any errors.  ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"solc ERC721Basic.sol  -o ./bin/ --combined-json=abi,bin,metadata --pretty-json --metadata --gas --abi --bin --overwrite --color\n")),(0,r.kt)("h2",{id:"options"},"Options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--metadata"),": creates metadata"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--abi"),": creates abi"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--bin"),": creates bin"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--combined-json=abi,bin,metadata"),": creates a json containing all above")),(0,r.kt)("h1",{id:"deploying-on-goerli"},"Deploying on Goerli"),(0,r.kt)("p",null,"If everything went well. it is time to deploy our contract on the Blockchain!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'geth --goerli --http --syncmode=light --http.api="eth,net,web3,personal,txpool" --allow-insecure-unlock  --http.corsdomain "*"\n')),(0,r.kt)("h2",{id:"importing-an-account-into-geth"},"Importing an account into Geth"),(0,r.kt)("p",null,"If you have not added your account in the local ",(0,r.kt)("inlineCode",{parentName:"p"},"Geth")," before"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# rm -r /home/mlibre/.ethereum/goerli/geth/\n# rm -r /home/mlibre/.ethereum/geth\ngeth account import ~/Data/myself/cryptocurrency-info-recovery/metamask/mforgood/D8_private_key\n# Set a password\n")),(0,r.kt)("h2",{id:"unlocking-an-account-in-geth"},"Unlocking an account in ",(0,r.kt)("strong",{parentName:"h2"},"Geth")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'geth --goerli --http --syncmode=light --http.api="eth,net,web3,personal,txpool" --allow-insecure-unlock  --http.corsdomain "*"\ngeth attach http://127.0.0.1:8545\nweb3.personal.importRawKey("AccountPrivateKey", "ThePasswordYouJustSet")\n# copy the address\npersonal.unlockAccount("TheAddress")\n# Type the password\n')),(0,r.kt)("h2",{id:"running-deployer"},"Running Deployer"),(0,r.kt)("p",null,"Now It is time to deploy the contract on the blockchain.",(0,r.kt)("br",{parentName:"p"}),"\n","Open the ",(0,r.kt)("inlineCode",{parentName:"p"},"main.js")," file and set the Deployer's arguments."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"node main.js \n")),(0,r.kt)("p",null,"Congrats! it is done :)\nthe output should be something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Network Name:  goerli\nNetwork Peers:  17\n\nSolidity Version: 0.8.9\nCompiling contract ERC721Basic.sol -> MLBNft\n\nETH balance:  5.829774442502007989\nGas:  2600228\nGas Price in ETH:  0.0000000019400003\nTotal Cost in ETH:  0.0050444431000684\nETH balance after deploying:  5.8247299994019395\n\nDeploying Contract ...\nArguments:  []\n\nTransaction hash: 0x0e5227da04038faecbc9e50400716f3805ee9edb87b53bbce89343d069351a29\nConfirmation Number: 0\nOwner: 0xD8f24D419153E5D03d614C5155f900f4B5C8A65C\nContract Address: 0xCa8234A0fdaAeFF1Ed3435E0832406b944c71327\nEtherscan.io: https://goerli.etherscan.io/address/0xCa8234A0fdaAeFF1Ed3435E0832406b944c71327\n")),(0,r.kt)("p",null,"If you click on the last link you will find the token."),(0,r.kt)("h1",{id:"verifying-the-contract"},"Verifying the contract"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"So first copy all the contract files (If you are using openzeppelin wizard, you can download vendor zip).  to a folder like ",(0,r.kt)("inlineCode",{parentName:"li"},"combined"),"."),(0,r.kt)("li",{parentName:"ol"},"Then change the ",(0,r.kt)("inlineCode",{parentName:"li"},"imports' paths")," to current path."),(0,r.kt)("li",{parentName:"ol"},"And all the sol versions to your solc version (0.8.9)"),(0,r.kt)("li",{parentName:"ol"},"Deploy the contract again")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'node main.js -f combined/MLBNft.sol -c MLBNft -s "0xD8f24D419153E5D03d614C5155f900f4B5C8A65C" -p "password" -h "http://127.0.0.1:8545"\n')),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Verify the new contract address")),(0,r.kt)("p",null,"I have done it for this example. you can find all the modified files in ",(0,r.kt)("strong",{parentName:"p"},"combined")," folder.",(0,r.kt)("br",{parentName:"p"}),"\n","If ",(0,r.kt)("strong",{parentName:"p"},"etherscan")," was unable to detect the constructor parameters. you can use ",(0,r.kt)("a",{parentName:"p",href:"https://abi.hashex.org/"},"hashex"),". copy the ",(0,r.kt)("inlineCode",{parentName:"p"},"TOKENNAME_abi.json")," file that the deployer has made. and paste it in ",(0,r.kt)("strong",{parentName:"p"},"hashex"),". We passed the value '7' to the contract constructor.",(0,r.kt)("br",{parentName:"p"}),"\n","Now deploy the contract."),(0,r.kt)("p",null,"Open ",(0,r.kt)("a",{parentName:"p",href:"https://goerli.etherscan.io/verifyContract"},"goerli.etherscan.io/verifyContract")),(0,r.kt)("h2",{id:"settings"},"Settings"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Contract Address: 0xcCE32d5A6B433972fA3Ff21233470D60ab7AFD6b (YOUR CONTRACT ADDRESS)"),(0,r.kt)("li",{parentName:"ul"},"Compiler Type: Multi part files"),(0,r.kt)("li",{parentName:"ul"},"Compiler Version: 0.8.7"),(0,r.kt)("li",{parentName:"ul"},"License MIT"),(0,r.kt)("li",{parentName:"ul"},"Optimization: No")),(0,r.kt)("h2",{id:"images"},"Images"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Settings"),(0,r.kt)("p",{parentName:"li"}," ",(0,r.kt)("img",{alt:"verify settings",src:n(4742).Z,width:"1474",height:"748"}))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Files upload. Files are necessary always like this. These photos just show the whole idea."),(0,r.kt)("p",{parentName:"li"}," ",(0,r.kt)("img",{alt:"Upload Files",src:n(7767).Z,width:"1402",height:"749"}),"  ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Verified"),(0,r.kt)("p",{parentName:"li"}," ",(0,r.kt)("img",{alt:"Verify",src:n(4454).Z,width:"1512",height:"890"})))),(0,r.kt)("h2",{id:"interacting-via-geth"},"Interacting via Geth"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'geth attach http://127.0.0.1:8545\npersonal.unlockAccount("0xd8f24d419153e5d03d614c5155f900f4b5c8a65c")\n\nvar abi = [{"inputs":[{"internalType":"uint256","nam"\nvar MyContract = web3.eth.contract(abi);\n# Copy Contract Address\nvar MyContractInstance = MyContract.at(\'0xcCE32d5A6B433972fA3Ff21233470D60ab7AFD6b\');\nMyContractInstance.balanceOf("0xd8f24d419153e5d03d614c5155f900f4b5c8a65c" , {from: eth.accounts[0]});\n')),(0,r.kt)("h2",{id:"interacting-via-web3js"},"Interacting via web3js"),(0,r.kt)("p",null,"If you like to call contract functions like ",(0,r.kt)("inlineCode",{parentName:"p"},"mint"),", I have also implemented some in ",(0,r.kt)("inlineCode",{parentName:"p"},"main.js")," like ",(0,r.kt)("inlineCode",{parentName:"p"},"getBalance")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"mint")," ",(0,r.kt)("strong",{parentName:"p"},"functions"),"."))}u.isMDXComponent=!0},4742:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/verify_0-679bf816c64fbd124d319c5f59bd4459.png"},7767:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/verify_1-b4488ef829f6c0db1e59529023a9ad62.png"},4454:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/verify_2-038bd31c92ec1d83d285069b26fa632d.png"}}]);